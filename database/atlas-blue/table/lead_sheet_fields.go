//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LeadSheetFields = newLeadSheetFieldsTable("atlas-blue", "lead_sheet_fields", "")

type leadSheetFieldsTable struct {
	mysql.Table

	// Columns
	LeadSheetID   mysql.ColumnString // (DC2Type:guid)
	AttributeType mysql.ColumnString
	AttributeID   mysql.ColumnString
	Allocation    mysql.ColumnString
	Comment       mysql.ColumnString
	Materiality   mysql.ColumnString
	WorkProgram   mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type LeadSheetFieldsTable struct {
	leadSheetFieldsTable

	NEW leadSheetFieldsTable
}

// AS creates new LeadSheetFieldsTable with assigned alias
func (a LeadSheetFieldsTable) AS(alias string) *LeadSheetFieldsTable {
	return newLeadSheetFieldsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LeadSheetFieldsTable with assigned schema name
func (a LeadSheetFieldsTable) FromSchema(schemaName string) *LeadSheetFieldsTable {
	return newLeadSheetFieldsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LeadSheetFieldsTable with assigned table prefix
func (a LeadSheetFieldsTable) WithPrefix(prefix string) *LeadSheetFieldsTable {
	return newLeadSheetFieldsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LeadSheetFieldsTable with assigned table suffix
func (a LeadSheetFieldsTable) WithSuffix(suffix string) *LeadSheetFieldsTable {
	return newLeadSheetFieldsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLeadSheetFieldsTable(schemaName, tableName, alias string) *LeadSheetFieldsTable {
	return &LeadSheetFieldsTable{
		leadSheetFieldsTable: newLeadSheetFieldsTableImpl(schemaName, tableName, alias),
		NEW:                  newLeadSheetFieldsTableImpl("", "new", ""),
	}
}

func newLeadSheetFieldsTableImpl(schemaName, tableName, alias string) leadSheetFieldsTable {
	var (
		LeadSheetIDColumn   = mysql.StringColumn("lead_sheet_id")
		AttributeTypeColumn = mysql.StringColumn("attribute_type")
		AttributeIDColumn   = mysql.StringColumn("attribute_id")
		AllocationColumn    = mysql.StringColumn("allocation")
		CommentColumn       = mysql.StringColumn("comment")
		MaterialityColumn   = mysql.StringColumn("materiality")
		WorkProgramColumn   = mysql.StringColumn("work_program")
		allColumns          = mysql.ColumnList{LeadSheetIDColumn, AttributeTypeColumn, AttributeIDColumn, AllocationColumn, CommentColumn, MaterialityColumn, WorkProgramColumn}
		mutableColumns      = mysql.ColumnList{AllocationColumn, CommentColumn, MaterialityColumn, WorkProgramColumn}
	)

	return leadSheetFieldsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		LeadSheetID:   LeadSheetIDColumn,
		AttributeType: AttributeTypeColumn,
		AttributeID:   AttributeIDColumn,
		Allocation:    AllocationColumn,
		Comment:       CommentColumn,
		Materiality:   MaterialityColumn,
		WorkProgram:   WorkProgramColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
