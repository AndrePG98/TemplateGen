//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ManagementOverrideGuidance = newManagementOverrideGuidanceTable("atlas-blue", "management_override_guidance", "")

type managementOverrideGuidanceTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID mysql.ColumnString // (DC2Type:guid)
	UserID       mysql.ColumnString // (DC2Type:guid)
	Accepted     mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ManagementOverrideGuidanceTable struct {
	managementOverrideGuidanceTable

	NEW managementOverrideGuidanceTable
}

// AS creates new ManagementOverrideGuidanceTable with assigned alias
func (a ManagementOverrideGuidanceTable) AS(alias string) *ManagementOverrideGuidanceTable {
	return newManagementOverrideGuidanceTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ManagementOverrideGuidanceTable with assigned schema name
func (a ManagementOverrideGuidanceTable) FromSchema(schemaName string) *ManagementOverrideGuidanceTable {
	return newManagementOverrideGuidanceTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ManagementOverrideGuidanceTable with assigned table prefix
func (a ManagementOverrideGuidanceTable) WithPrefix(prefix string) *ManagementOverrideGuidanceTable {
	return newManagementOverrideGuidanceTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ManagementOverrideGuidanceTable with assigned table suffix
func (a ManagementOverrideGuidanceTable) WithSuffix(suffix string) *ManagementOverrideGuidanceTable {
	return newManagementOverrideGuidanceTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newManagementOverrideGuidanceTable(schemaName, tableName, alias string) *ManagementOverrideGuidanceTable {
	return &ManagementOverrideGuidanceTable{
		managementOverrideGuidanceTable: newManagementOverrideGuidanceTableImpl(schemaName, tableName, alias),
		NEW:                             newManagementOverrideGuidanceTableImpl("", "new", ""),
	}
}

func newManagementOverrideGuidanceTableImpl(schemaName, tableName, alias string) managementOverrideGuidanceTable {
	var (
		IDColumn           = mysql.StringColumn("id")
		EngagementIDColumn = mysql.StringColumn("engagement_id")
		UserIDColumn       = mysql.StringColumn("user_id")
		AcceptedColumn     = mysql.BoolColumn("accepted")
		allColumns         = mysql.ColumnList{IDColumn, EngagementIDColumn, UserIDColumn, AcceptedColumn}
		mutableColumns     = mysql.ColumnList{EngagementIDColumn, UserIDColumn, AcceptedColumn}
	)

	return managementOverrideGuidanceTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		EngagementID: EngagementIDColumn,
		UserID:       UserIDColumn,
		Accepted:     AcceptedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
