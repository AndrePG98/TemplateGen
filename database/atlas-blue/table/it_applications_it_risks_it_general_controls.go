//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ItApplicationsItRisksItGeneralControls = newItApplicationsItRisksItGeneralControlsTable("atlas-blue", "it_applications_it_risks_it_general_controls", "")

type itApplicationsItRisksItGeneralControlsTable struct {
	mysql.Table

	// Columns
	ID                    mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	ItApplicationID       mysql.ColumnString // (DC2Type:guid)
	ItRiskID              mysql.ColumnString // (DC2Type:guid)
	ItGeneralControlID    mysql.ColumnString // (DC2Type:guid)
	ItSubCategoryLovID    mysql.ColumnString
	PlannedEvaluationOfOe mysql.ColumnBool
	PlannedEvaluationOfDi mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ItApplicationsItRisksItGeneralControlsTable struct {
	itApplicationsItRisksItGeneralControlsTable

	NEW itApplicationsItRisksItGeneralControlsTable
}

// AS creates new ItApplicationsItRisksItGeneralControlsTable with assigned alias
func (a ItApplicationsItRisksItGeneralControlsTable) AS(alias string) *ItApplicationsItRisksItGeneralControlsTable {
	return newItApplicationsItRisksItGeneralControlsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ItApplicationsItRisksItGeneralControlsTable with assigned schema name
func (a ItApplicationsItRisksItGeneralControlsTable) FromSchema(schemaName string) *ItApplicationsItRisksItGeneralControlsTable {
	return newItApplicationsItRisksItGeneralControlsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ItApplicationsItRisksItGeneralControlsTable with assigned table prefix
func (a ItApplicationsItRisksItGeneralControlsTable) WithPrefix(prefix string) *ItApplicationsItRisksItGeneralControlsTable {
	return newItApplicationsItRisksItGeneralControlsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ItApplicationsItRisksItGeneralControlsTable with assigned table suffix
func (a ItApplicationsItRisksItGeneralControlsTable) WithSuffix(suffix string) *ItApplicationsItRisksItGeneralControlsTable {
	return newItApplicationsItRisksItGeneralControlsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newItApplicationsItRisksItGeneralControlsTable(schemaName, tableName, alias string) *ItApplicationsItRisksItGeneralControlsTable {
	return &ItApplicationsItRisksItGeneralControlsTable{
		itApplicationsItRisksItGeneralControlsTable: newItApplicationsItRisksItGeneralControlsTableImpl(schemaName, tableName, alias),
		NEW: newItApplicationsItRisksItGeneralControlsTableImpl("", "new", ""),
	}
}

func newItApplicationsItRisksItGeneralControlsTableImpl(schemaName, tableName, alias string) itApplicationsItRisksItGeneralControlsTable {
	var (
		IDColumn                    = mysql.StringColumn("id")
		ItApplicationIDColumn       = mysql.StringColumn("it_application_id")
		ItRiskIDColumn              = mysql.StringColumn("it_risk_id")
		ItGeneralControlIDColumn    = mysql.StringColumn("it_general_control_id")
		ItSubCategoryLovIDColumn    = mysql.StringColumn("it_sub_category_lov_id")
		PlannedEvaluationOfOeColumn = mysql.BoolColumn("planned_evaluation_of_oe")
		PlannedEvaluationOfDiColumn = mysql.BoolColumn("planned_evaluation_of_di")
		allColumns                  = mysql.ColumnList{IDColumn, ItApplicationIDColumn, ItRiskIDColumn, ItGeneralControlIDColumn, ItSubCategoryLovIDColumn, PlannedEvaluationOfOeColumn, PlannedEvaluationOfDiColumn}
		mutableColumns              = mysql.ColumnList{ItApplicationIDColumn, ItRiskIDColumn, ItGeneralControlIDColumn, ItSubCategoryLovIDColumn, PlannedEvaluationOfOeColumn, PlannedEvaluationOfDiColumn}
	)

	return itApplicationsItRisksItGeneralControlsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                    IDColumn,
		ItApplicationID:       ItApplicationIDColumn,
		ItRiskID:              ItRiskIDColumn,
		ItGeneralControlID:    ItGeneralControlIDColumn,
		ItSubCategoryLovID:    ItSubCategoryLovIDColumn,
		PlannedEvaluationOfOe: PlannedEvaluationOfOeColumn,
		PlannedEvaluationOfDi: PlannedEvaluationOfDiColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
