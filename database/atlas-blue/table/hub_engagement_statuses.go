//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var HubEngagementStatuses = newHubEngagementStatusesTable("atlas-blue", "hub_engagement_statuses", "")

type hubEngagementStatusesTable struct {
	mysql.Table

	// Columns
	ID             mysql.ColumnInteger
	LocalPackageID mysql.ColumnString
	ItemID         mysql.ColumnString
	Translations   mysql.ColumnString // (DC2Type:json)
	Acronym        mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type HubEngagementStatusesTable struct {
	hubEngagementStatusesTable

	NEW hubEngagementStatusesTable
}

// AS creates new HubEngagementStatusesTable with assigned alias
func (a HubEngagementStatusesTable) AS(alias string) *HubEngagementStatusesTable {
	return newHubEngagementStatusesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new HubEngagementStatusesTable with assigned schema name
func (a HubEngagementStatusesTable) FromSchema(schemaName string) *HubEngagementStatusesTable {
	return newHubEngagementStatusesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new HubEngagementStatusesTable with assigned table prefix
func (a HubEngagementStatusesTable) WithPrefix(prefix string) *HubEngagementStatusesTable {
	return newHubEngagementStatusesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new HubEngagementStatusesTable with assigned table suffix
func (a HubEngagementStatusesTable) WithSuffix(suffix string) *HubEngagementStatusesTable {
	return newHubEngagementStatusesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newHubEngagementStatusesTable(schemaName, tableName, alias string) *HubEngagementStatusesTable {
	return &HubEngagementStatusesTable{
		hubEngagementStatusesTable: newHubEngagementStatusesTableImpl(schemaName, tableName, alias),
		NEW:                        newHubEngagementStatusesTableImpl("", "new", ""),
	}
}

func newHubEngagementStatusesTableImpl(schemaName, tableName, alias string) hubEngagementStatusesTable {
	var (
		IDColumn             = mysql.IntegerColumn("id")
		LocalPackageIDColumn = mysql.StringColumn("local_package_id")
		ItemIDColumn         = mysql.StringColumn("item_id")
		TranslationsColumn   = mysql.StringColumn("translations")
		AcronymColumn        = mysql.StringColumn("acronym")
		allColumns           = mysql.ColumnList{IDColumn, LocalPackageIDColumn, ItemIDColumn, TranslationsColumn, AcronymColumn}
		mutableColumns       = mysql.ColumnList{LocalPackageIDColumn, ItemIDColumn, TranslationsColumn, AcronymColumn}
	)

	return hubEngagementStatusesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		LocalPackageID: LocalPackageIDColumn,
		ItemID:         ItemIDColumn,
		Translations:   TranslationsColumn,
		Acronym:        AcronymColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
