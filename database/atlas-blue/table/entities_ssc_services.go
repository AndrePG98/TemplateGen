//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EntitiesSscServices = newEntitiesSscServicesTable("atlas-blue", "entities_ssc_services", "")

type entitiesSscServicesTable struct {
	mysql.Table

	// Columns
	EntityID     mysql.ColumnString // (DC2Type:guid)
	SscServiceID mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EntitiesSscServicesTable struct {
	entitiesSscServicesTable

	NEW entitiesSscServicesTable
}

// AS creates new EntitiesSscServicesTable with assigned alias
func (a EntitiesSscServicesTable) AS(alias string) *EntitiesSscServicesTable {
	return newEntitiesSscServicesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EntitiesSscServicesTable with assigned schema name
func (a EntitiesSscServicesTable) FromSchema(schemaName string) *EntitiesSscServicesTable {
	return newEntitiesSscServicesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EntitiesSscServicesTable with assigned table prefix
func (a EntitiesSscServicesTable) WithPrefix(prefix string) *EntitiesSscServicesTable {
	return newEntitiesSscServicesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EntitiesSscServicesTable with assigned table suffix
func (a EntitiesSscServicesTable) WithSuffix(suffix string) *EntitiesSscServicesTable {
	return newEntitiesSscServicesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEntitiesSscServicesTable(schemaName, tableName, alias string) *EntitiesSscServicesTable {
	return &EntitiesSscServicesTable{
		entitiesSscServicesTable: newEntitiesSscServicesTableImpl(schemaName, tableName, alias),
		NEW:                      newEntitiesSscServicesTableImpl("", "new", ""),
	}
}

func newEntitiesSscServicesTableImpl(schemaName, tableName, alias string) entitiesSscServicesTable {
	var (
		EntityIDColumn     = mysql.StringColumn("entity_id")
		SscServiceIDColumn = mysql.IntegerColumn("ssc_service_id")
		allColumns         = mysql.ColumnList{EntityIDColumn, SscServiceIDColumn}
		mutableColumns     = mysql.ColumnList{}
	)

	return entitiesSscServicesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		EntityID:     EntityIDColumn,
		SscServiceID: SscServiceIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
