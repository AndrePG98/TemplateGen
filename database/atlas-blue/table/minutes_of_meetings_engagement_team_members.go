//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MinutesOfMeetingsEngagementTeamMembers = newMinutesOfMeetingsEngagementTeamMembersTable("atlas-blue", "minutes_of_meetings_engagement_team_members", "")

type minutesOfMeetingsEngagementTeamMembersTable struct {
	mysql.Table

	// Columns
	MinuteOfMeetingID      mysql.ColumnString // (DC2Type:guid)
	EngagementTeamMemberID mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MinutesOfMeetingsEngagementTeamMembersTable struct {
	minutesOfMeetingsEngagementTeamMembersTable

	NEW minutesOfMeetingsEngagementTeamMembersTable
}

// AS creates new MinutesOfMeetingsEngagementTeamMembersTable with assigned alias
func (a MinutesOfMeetingsEngagementTeamMembersTable) AS(alias string) *MinutesOfMeetingsEngagementTeamMembersTable {
	return newMinutesOfMeetingsEngagementTeamMembersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MinutesOfMeetingsEngagementTeamMembersTable with assigned schema name
func (a MinutesOfMeetingsEngagementTeamMembersTable) FromSchema(schemaName string) *MinutesOfMeetingsEngagementTeamMembersTable {
	return newMinutesOfMeetingsEngagementTeamMembersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MinutesOfMeetingsEngagementTeamMembersTable with assigned table prefix
func (a MinutesOfMeetingsEngagementTeamMembersTable) WithPrefix(prefix string) *MinutesOfMeetingsEngagementTeamMembersTable {
	return newMinutesOfMeetingsEngagementTeamMembersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MinutesOfMeetingsEngagementTeamMembersTable with assigned table suffix
func (a MinutesOfMeetingsEngagementTeamMembersTable) WithSuffix(suffix string) *MinutesOfMeetingsEngagementTeamMembersTable {
	return newMinutesOfMeetingsEngagementTeamMembersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMinutesOfMeetingsEngagementTeamMembersTable(schemaName, tableName, alias string) *MinutesOfMeetingsEngagementTeamMembersTable {
	return &MinutesOfMeetingsEngagementTeamMembersTable{
		minutesOfMeetingsEngagementTeamMembersTable: newMinutesOfMeetingsEngagementTeamMembersTableImpl(schemaName, tableName, alias),
		NEW: newMinutesOfMeetingsEngagementTeamMembersTableImpl("", "new", ""),
	}
}

func newMinutesOfMeetingsEngagementTeamMembersTableImpl(schemaName, tableName, alias string) minutesOfMeetingsEngagementTeamMembersTable {
	var (
		MinuteOfMeetingIDColumn      = mysql.StringColumn("minute_of_meeting_id")
		EngagementTeamMemberIDColumn = mysql.StringColumn("engagement_team_member_id")
		allColumns                   = mysql.ColumnList{MinuteOfMeetingIDColumn, EngagementTeamMemberIDColumn}
		mutableColumns               = mysql.ColumnList{}
	)

	return minutesOfMeetingsEngagementTeamMembersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MinuteOfMeetingID:      MinuteOfMeetingIDColumn,
		EngagementTeamMemberID: EngagementTeamMemberIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
