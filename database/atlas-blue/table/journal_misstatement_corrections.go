//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var JournalMisstatementCorrections = newJournalMisstatementCorrectionsTable("atlas-blue", "journal_misstatement_corrections", "")

type journalMisstatementCorrectionsTable struct {
	mysql.Table

	// Columns
	ID                   mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	MisstatementID       mysql.ColumnString // (DC2Type:guid)
	TbAccountCotabdID    mysql.ColumnString // (DC2Type:guid)
	Order                mysql.ColumnInteger
	DebitCredit          mysql.ColumnString
	Amount               mysql.ColumnFloat
	Deleted              mysql.ColumnBool
	IsBalanceSheet       mysql.ColumnBool
	BalanceSheetCategory mysql.ColumnString
	Checked              mysql.ColumnBool
	CheckedComment       mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type JournalMisstatementCorrectionsTable struct {
	journalMisstatementCorrectionsTable

	NEW journalMisstatementCorrectionsTable
}

// AS creates new JournalMisstatementCorrectionsTable with assigned alias
func (a JournalMisstatementCorrectionsTable) AS(alias string) *JournalMisstatementCorrectionsTable {
	return newJournalMisstatementCorrectionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new JournalMisstatementCorrectionsTable with assigned schema name
func (a JournalMisstatementCorrectionsTable) FromSchema(schemaName string) *JournalMisstatementCorrectionsTable {
	return newJournalMisstatementCorrectionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new JournalMisstatementCorrectionsTable with assigned table prefix
func (a JournalMisstatementCorrectionsTable) WithPrefix(prefix string) *JournalMisstatementCorrectionsTable {
	return newJournalMisstatementCorrectionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new JournalMisstatementCorrectionsTable with assigned table suffix
func (a JournalMisstatementCorrectionsTable) WithSuffix(suffix string) *JournalMisstatementCorrectionsTable {
	return newJournalMisstatementCorrectionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newJournalMisstatementCorrectionsTable(schemaName, tableName, alias string) *JournalMisstatementCorrectionsTable {
	return &JournalMisstatementCorrectionsTable{
		journalMisstatementCorrectionsTable: newJournalMisstatementCorrectionsTableImpl(schemaName, tableName, alias),
		NEW:                                 newJournalMisstatementCorrectionsTableImpl("", "new", ""),
	}
}

func newJournalMisstatementCorrectionsTableImpl(schemaName, tableName, alias string) journalMisstatementCorrectionsTable {
	var (
		IDColumn                   = mysql.StringColumn("id")
		MisstatementIDColumn       = mysql.StringColumn("misstatement_id")
		TbAccountCotabdIDColumn    = mysql.StringColumn("tb_account_cotabd_id")
		OrderColumn                = mysql.IntegerColumn("order")
		DebitCreditColumn          = mysql.StringColumn("debit_credit")
		AmountColumn               = mysql.FloatColumn("amount")
		DeletedColumn              = mysql.BoolColumn("deleted")
		IsBalanceSheetColumn       = mysql.BoolColumn("is_balance_sheet")
		BalanceSheetCategoryColumn = mysql.StringColumn("balance_sheet_category")
		CheckedColumn              = mysql.BoolColumn("checked")
		CheckedCommentColumn       = mysql.StringColumn("checked_comment")
		allColumns                 = mysql.ColumnList{IDColumn, MisstatementIDColumn, TbAccountCotabdIDColumn, OrderColumn, DebitCreditColumn, AmountColumn, DeletedColumn, IsBalanceSheetColumn, BalanceSheetCategoryColumn, CheckedColumn, CheckedCommentColumn}
		mutableColumns             = mysql.ColumnList{MisstatementIDColumn, TbAccountCotabdIDColumn, OrderColumn, DebitCreditColumn, AmountColumn, DeletedColumn, IsBalanceSheetColumn, BalanceSheetCategoryColumn, CheckedColumn, CheckedCommentColumn}
	)

	return journalMisstatementCorrectionsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                   IDColumn,
		MisstatementID:       MisstatementIDColumn,
		TbAccountCotabdID:    TbAccountCotabdIDColumn,
		Order:                OrderColumn,
		DebitCredit:          DebitCreditColumn,
		Amount:               AmountColumn,
		Deleted:              DeletedColumn,
		IsBalanceSheet:       IsBalanceSheetColumn,
		BalanceSheetCategory: BalanceSheetCategoryColumn,
		Checked:              CheckedColumn,
		CheckedComment:       CheckedCommentColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
