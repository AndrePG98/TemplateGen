//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var DetailOfMisstatements = newDetailOfMisstatementsTable("atlas-blue", "detail_of_misstatements", "")

type detailOfMisstatementsTable struct {
	mysql.Table

	// Columns
	ID                                              mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	MisstatementID                                  mysql.ColumnString // (DC2Type:guid)
	Number                                          mysql.ColumnInteger
	YearApplicable                                  mysql.ColumnString
	NatureLovID                                     mysql.ColumnString
	Description                                     mysql.ColumnString
	HowDidThisMisstatementArise                     mysql.ColumnString
	PossibilityOfOtherSuchMisstatement              mysql.ColumnString
	Comment                                         mysql.ColumnString
	WillTheMisstatementBeAdjusted                   mysql.ColumnString
	RollForward                                     mysql.ColumnBool
	ExplicationWhyUnadjustedErrorIsNotRolledForward mysql.ColumnString
	ReasonNonAdjusted                               mysql.ColumnString
	Conclusion                                      mysql.ColumnString
	MaterialComment                                 mysql.ColumnString
	Material                                        mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type DetailOfMisstatementsTable struct {
	detailOfMisstatementsTable

	NEW detailOfMisstatementsTable
}

// AS creates new DetailOfMisstatementsTable with assigned alias
func (a DetailOfMisstatementsTable) AS(alias string) *DetailOfMisstatementsTable {
	return newDetailOfMisstatementsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DetailOfMisstatementsTable with assigned schema name
func (a DetailOfMisstatementsTable) FromSchema(schemaName string) *DetailOfMisstatementsTable {
	return newDetailOfMisstatementsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DetailOfMisstatementsTable with assigned table prefix
func (a DetailOfMisstatementsTable) WithPrefix(prefix string) *DetailOfMisstatementsTable {
	return newDetailOfMisstatementsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DetailOfMisstatementsTable with assigned table suffix
func (a DetailOfMisstatementsTable) WithSuffix(suffix string) *DetailOfMisstatementsTable {
	return newDetailOfMisstatementsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDetailOfMisstatementsTable(schemaName, tableName, alias string) *DetailOfMisstatementsTable {
	return &DetailOfMisstatementsTable{
		detailOfMisstatementsTable: newDetailOfMisstatementsTableImpl(schemaName, tableName, alias),
		NEW:                        newDetailOfMisstatementsTableImpl("", "new", ""),
	}
}

func newDetailOfMisstatementsTableImpl(schemaName, tableName, alias string) detailOfMisstatementsTable {
	var (
		IDColumn                                              = mysql.StringColumn("id")
		MisstatementIDColumn                                  = mysql.StringColumn("misstatement_id")
		NumberColumn                                          = mysql.IntegerColumn("number")
		YearApplicableColumn                                  = mysql.StringColumn("year_applicable")
		NatureLovIDColumn                                     = mysql.StringColumn("nature_lov_id")
		DescriptionColumn                                     = mysql.StringColumn("description")
		HowDidThisMisstatementAriseColumn                     = mysql.StringColumn("how_did_this_misstatement_arise")
		PossibilityOfOtherSuchMisstatementColumn              = mysql.StringColumn("possibility_of_other_such_misstatement")
		CommentColumn                                         = mysql.StringColumn("comment")
		WillTheMisstatementBeAdjustedColumn                   = mysql.StringColumn("will_the_misstatement_be_adjusted")
		RollForwardColumn                                     = mysql.BoolColumn("roll_forward")
		ExplicationWhyUnadjustedErrorIsNotRolledForwardColumn = mysql.StringColumn("explication_why_unadjusted_error_is_not_rolled_forward")
		ReasonNonAdjustedColumn                               = mysql.StringColumn("reason_non_adjusted")
		ConclusionColumn                                      = mysql.StringColumn("conclusion")
		MaterialCommentColumn                                 = mysql.StringColumn("material_comment")
		MaterialColumn                                        = mysql.StringColumn("material")
		allColumns                                            = mysql.ColumnList{IDColumn, MisstatementIDColumn, NumberColumn, YearApplicableColumn, NatureLovIDColumn, DescriptionColumn, HowDidThisMisstatementAriseColumn, PossibilityOfOtherSuchMisstatementColumn, CommentColumn, WillTheMisstatementBeAdjustedColumn, RollForwardColumn, ExplicationWhyUnadjustedErrorIsNotRolledForwardColumn, ReasonNonAdjustedColumn, ConclusionColumn, MaterialCommentColumn, MaterialColumn}
		mutableColumns                                        = mysql.ColumnList{MisstatementIDColumn, NumberColumn, YearApplicableColumn, NatureLovIDColumn, DescriptionColumn, HowDidThisMisstatementAriseColumn, PossibilityOfOtherSuchMisstatementColumn, CommentColumn, WillTheMisstatementBeAdjustedColumn, RollForwardColumn, ExplicationWhyUnadjustedErrorIsNotRolledForwardColumn, ReasonNonAdjustedColumn, ConclusionColumn, MaterialCommentColumn, MaterialColumn}
	)

	return detailOfMisstatementsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                                 IDColumn,
		MisstatementID:                     MisstatementIDColumn,
		Number:                             NumberColumn,
		YearApplicable:                     YearApplicableColumn,
		NatureLovID:                        NatureLovIDColumn,
		Description:                        DescriptionColumn,
		HowDidThisMisstatementArise:        HowDidThisMisstatementAriseColumn,
		PossibilityOfOtherSuchMisstatement: PossibilityOfOtherSuchMisstatementColumn,
		Comment:                            CommentColumn,
		WillTheMisstatementBeAdjusted:      WillTheMisstatementBeAdjustedColumn,
		RollForward:                        RollForwardColumn,
		ExplicationWhyUnadjustedErrorIsNotRolledForward: ExplicationWhyUnadjustedErrorIsNotRolledForwardColumn,
		ReasonNonAdjusted: ReasonNonAdjustedColumn,
		Conclusion:        ConclusionColumn,
		MaterialComment:   MaterialCommentColumn,
		Material:          MaterialColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
