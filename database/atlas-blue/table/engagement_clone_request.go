//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EngagementCloneRequest = newEngagementCloneRequestTable("atlas-blue", "engagement_clone_request", "")

type engagementCloneRequestTable struct {
	mysql.Table

	// Columns
	ID                      mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID            mysql.ColumnString // (DC2Type:guid)
	EntityID                mysql.ColumnString // (DC2Type:guid)
	LeadPartnerID           mysql.ColumnString // (DC2Type:guid)
	EngagementPeriodEndDate mysql.ColumnDate   // (DC2Type:date_immutable)
	CloneEverything         mysql.ColumnBool
	ClonePlanningAndRisk    mysql.ColumnBool
	CloneAuditResponses     mysql.ColumnBool
	CloneCompletion         mysql.ColumnBool
	SignOffsToInclude       mysql.ColumnString // (DC2Type:array)
	CloneAllFinancialData   mysql.ColumnBool
	SubmitMapping           mysql.ColumnBool
	CloneMateriality        mysql.ColumnBool
	CloneAllMeetings        mysql.ColumnBool
	CloneAllChecklists      mysql.ColumnString
	CloneRiskAssessment     mysql.ColumnBool
	CloneMarks              mysql.ColumnString
	CloneNotes              mysql.ColumnString // (DC2Type:array)
	CloneDocuments          mysql.ColumnBool
	CloneWorkPrograms       mysql.ColumnBool
	IsSubmitted             mysql.ColumnBool
	IsBroadcast             mysql.ColumnBool
	BroadcastRecurrence     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EngagementCloneRequestTable struct {
	engagementCloneRequestTable

	NEW engagementCloneRequestTable
}

// AS creates new EngagementCloneRequestTable with assigned alias
func (a EngagementCloneRequestTable) AS(alias string) *EngagementCloneRequestTable {
	return newEngagementCloneRequestTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EngagementCloneRequestTable with assigned schema name
func (a EngagementCloneRequestTable) FromSchema(schemaName string) *EngagementCloneRequestTable {
	return newEngagementCloneRequestTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EngagementCloneRequestTable with assigned table prefix
func (a EngagementCloneRequestTable) WithPrefix(prefix string) *EngagementCloneRequestTable {
	return newEngagementCloneRequestTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EngagementCloneRequestTable with assigned table suffix
func (a EngagementCloneRequestTable) WithSuffix(suffix string) *EngagementCloneRequestTable {
	return newEngagementCloneRequestTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEngagementCloneRequestTable(schemaName, tableName, alias string) *EngagementCloneRequestTable {
	return &EngagementCloneRequestTable{
		engagementCloneRequestTable: newEngagementCloneRequestTableImpl(schemaName, tableName, alias),
		NEW:                         newEngagementCloneRequestTableImpl("", "new", ""),
	}
}

func newEngagementCloneRequestTableImpl(schemaName, tableName, alias string) engagementCloneRequestTable {
	var (
		IDColumn                      = mysql.StringColumn("id")
		EngagementIDColumn            = mysql.StringColumn("engagement_id")
		EntityIDColumn                = mysql.StringColumn("entity_id")
		LeadPartnerIDColumn           = mysql.StringColumn("lead_partner_id")
		EngagementPeriodEndDateColumn = mysql.DateColumn("engagement_period_end_date")
		CloneEverythingColumn         = mysql.BoolColumn("clone_everything")
		ClonePlanningAndRiskColumn    = mysql.BoolColumn("clone_planning_and_risk")
		CloneAuditResponsesColumn     = mysql.BoolColumn("clone_audit_responses")
		CloneCompletionColumn         = mysql.BoolColumn("clone_completion")
		SignOffsToIncludeColumn       = mysql.StringColumn("sign_offs_to_include")
		CloneAllFinancialDataColumn   = mysql.BoolColumn("clone_all_financial_data")
		SubmitMappingColumn           = mysql.BoolColumn("submit_mapping")
		CloneMaterialityColumn        = mysql.BoolColumn("clone_materiality")
		CloneAllMeetingsColumn        = mysql.BoolColumn("clone_all_meetings")
		CloneAllChecklistsColumn      = mysql.StringColumn("clone_all_checklists")
		CloneRiskAssessmentColumn     = mysql.BoolColumn("clone_risk_assessment")
		CloneMarksColumn              = mysql.StringColumn("clone_marks")
		CloneNotesColumn              = mysql.StringColumn("clone_notes")
		CloneDocumentsColumn          = mysql.BoolColumn("clone_documents")
		CloneWorkProgramsColumn       = mysql.BoolColumn("clone_work_programs")
		IsSubmittedColumn             = mysql.BoolColumn("is_submitted")
		IsBroadcastColumn             = mysql.BoolColumn("is_broadcast")
		BroadcastRecurrenceColumn     = mysql.StringColumn("broadcast_recurrence")
		allColumns                    = mysql.ColumnList{IDColumn, EngagementIDColumn, EntityIDColumn, LeadPartnerIDColumn, EngagementPeriodEndDateColumn, CloneEverythingColumn, ClonePlanningAndRiskColumn, CloneAuditResponsesColumn, CloneCompletionColumn, SignOffsToIncludeColumn, CloneAllFinancialDataColumn, SubmitMappingColumn, CloneMaterialityColumn, CloneAllMeetingsColumn, CloneAllChecklistsColumn, CloneRiskAssessmentColumn, CloneMarksColumn, CloneNotesColumn, CloneDocumentsColumn, CloneWorkProgramsColumn, IsSubmittedColumn, IsBroadcastColumn, BroadcastRecurrenceColumn}
		mutableColumns                = mysql.ColumnList{EngagementIDColumn, EntityIDColumn, LeadPartnerIDColumn, EngagementPeriodEndDateColumn, CloneEverythingColumn, ClonePlanningAndRiskColumn, CloneAuditResponsesColumn, CloneCompletionColumn, SignOffsToIncludeColumn, CloneAllFinancialDataColumn, SubmitMappingColumn, CloneMaterialityColumn, CloneAllMeetingsColumn, CloneAllChecklistsColumn, CloneRiskAssessmentColumn, CloneMarksColumn, CloneNotesColumn, CloneDocumentsColumn, CloneWorkProgramsColumn, IsSubmittedColumn, IsBroadcastColumn, BroadcastRecurrenceColumn}
	)

	return engagementCloneRequestTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                      IDColumn,
		EngagementID:            EngagementIDColumn,
		EntityID:                EntityIDColumn,
		LeadPartnerID:           LeadPartnerIDColumn,
		EngagementPeriodEndDate: EngagementPeriodEndDateColumn,
		CloneEverything:         CloneEverythingColumn,
		ClonePlanningAndRisk:    ClonePlanningAndRiskColumn,
		CloneAuditResponses:     CloneAuditResponsesColumn,
		CloneCompletion:         CloneCompletionColumn,
		SignOffsToInclude:       SignOffsToIncludeColumn,
		CloneAllFinancialData:   CloneAllFinancialDataColumn,
		SubmitMapping:           SubmitMappingColumn,
		CloneMateriality:        CloneMaterialityColumn,
		CloneAllMeetings:        CloneAllMeetingsColumn,
		CloneAllChecklists:      CloneAllChecklistsColumn,
		CloneRiskAssessment:     CloneRiskAssessmentColumn,
		CloneMarks:              CloneMarksColumn,
		CloneNotes:              CloneNotesColumn,
		CloneDocuments:          CloneDocumentsColumn,
		CloneWorkPrograms:       CloneWorkProgramsColumn,
		IsSubmitted:             IsSubmittedColumn,
		IsBroadcast:             IsBroadcastColumn,
		BroadcastRecurrence:     BroadcastRecurrenceColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
