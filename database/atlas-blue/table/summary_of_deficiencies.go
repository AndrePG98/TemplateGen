//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SummaryOfDeficiencies = newSummaryOfDeficienciesTable("atlas-blue", "summary_of_deficiencies", "")

type summaryOfDeficienciesTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID mysql.ColumnString // (DC2Type:guid)
	IsValid      mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type SummaryOfDeficienciesTable struct {
	summaryOfDeficienciesTable

	NEW summaryOfDeficienciesTable
}

// AS creates new SummaryOfDeficienciesTable with assigned alias
func (a SummaryOfDeficienciesTable) AS(alias string) *SummaryOfDeficienciesTable {
	return newSummaryOfDeficienciesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SummaryOfDeficienciesTable with assigned schema name
func (a SummaryOfDeficienciesTable) FromSchema(schemaName string) *SummaryOfDeficienciesTable {
	return newSummaryOfDeficienciesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SummaryOfDeficienciesTable with assigned table prefix
func (a SummaryOfDeficienciesTable) WithPrefix(prefix string) *SummaryOfDeficienciesTable {
	return newSummaryOfDeficienciesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SummaryOfDeficienciesTable with assigned table suffix
func (a SummaryOfDeficienciesTable) WithSuffix(suffix string) *SummaryOfDeficienciesTable {
	return newSummaryOfDeficienciesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSummaryOfDeficienciesTable(schemaName, tableName, alias string) *SummaryOfDeficienciesTable {
	return &SummaryOfDeficienciesTable{
		summaryOfDeficienciesTable: newSummaryOfDeficienciesTableImpl(schemaName, tableName, alias),
		NEW:                        newSummaryOfDeficienciesTableImpl("", "new", ""),
	}
}

func newSummaryOfDeficienciesTableImpl(schemaName, tableName, alias string) summaryOfDeficienciesTable {
	var (
		IDColumn           = mysql.StringColumn("id")
		EngagementIDColumn = mysql.StringColumn("engagement_id")
		IsValidColumn      = mysql.BoolColumn("is_valid")
		allColumns         = mysql.ColumnList{IDColumn, EngagementIDColumn, IsValidColumn}
		mutableColumns     = mysql.ColumnList{EngagementIDColumn, IsValidColumn}
	)

	return summaryOfDeficienciesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		EngagementID: EngagementIDColumn,
		IsValid:      IsValidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
