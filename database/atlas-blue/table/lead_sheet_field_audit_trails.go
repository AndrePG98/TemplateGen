//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LeadSheetFieldAuditTrails = newLeadSheetFieldAuditTrailsTable("atlas-blue", "lead_sheet_field_audit_trails", "")

type leadSheetFieldAuditTrailsTable struct {
	mysql.Table

	// Columns
	ID                      mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementsAuditTrailID mysql.ColumnString // (DC2Type:guid)
	TbAccountID             mysql.ColumnString // (DC2Type:guid)
	LeadSheetID             mysql.ColumnString // @UUID(DC2Type:guid)
	AttributeType           mysql.ColumnString
	AttributeID             mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type LeadSheetFieldAuditTrailsTable struct {
	leadSheetFieldAuditTrailsTable

	NEW leadSheetFieldAuditTrailsTable
}

// AS creates new LeadSheetFieldAuditTrailsTable with assigned alias
func (a LeadSheetFieldAuditTrailsTable) AS(alias string) *LeadSheetFieldAuditTrailsTable {
	return newLeadSheetFieldAuditTrailsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LeadSheetFieldAuditTrailsTable with assigned schema name
func (a LeadSheetFieldAuditTrailsTable) FromSchema(schemaName string) *LeadSheetFieldAuditTrailsTable {
	return newLeadSheetFieldAuditTrailsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LeadSheetFieldAuditTrailsTable with assigned table prefix
func (a LeadSheetFieldAuditTrailsTable) WithPrefix(prefix string) *LeadSheetFieldAuditTrailsTable {
	return newLeadSheetFieldAuditTrailsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LeadSheetFieldAuditTrailsTable with assigned table suffix
func (a LeadSheetFieldAuditTrailsTable) WithSuffix(suffix string) *LeadSheetFieldAuditTrailsTable {
	return newLeadSheetFieldAuditTrailsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLeadSheetFieldAuditTrailsTable(schemaName, tableName, alias string) *LeadSheetFieldAuditTrailsTable {
	return &LeadSheetFieldAuditTrailsTable{
		leadSheetFieldAuditTrailsTable: newLeadSheetFieldAuditTrailsTableImpl(schemaName, tableName, alias),
		NEW:                            newLeadSheetFieldAuditTrailsTableImpl("", "new", ""),
	}
}

func newLeadSheetFieldAuditTrailsTableImpl(schemaName, tableName, alias string) leadSheetFieldAuditTrailsTable {
	var (
		IDColumn                      = mysql.StringColumn("id")
		EngagementsAuditTrailIDColumn = mysql.StringColumn("engagements_audit_trail_id")
		TbAccountIDColumn             = mysql.StringColumn("tb_account_id")
		LeadSheetIDColumn             = mysql.StringColumn("lead_sheet_id")
		AttributeTypeColumn           = mysql.StringColumn("attribute_type")
		AttributeIDColumn             = mysql.StringColumn("attribute_id")
		allColumns                    = mysql.ColumnList{IDColumn, EngagementsAuditTrailIDColumn, TbAccountIDColumn, LeadSheetIDColumn, AttributeTypeColumn, AttributeIDColumn}
		mutableColumns                = mysql.ColumnList{EngagementsAuditTrailIDColumn, TbAccountIDColumn, LeadSheetIDColumn, AttributeTypeColumn, AttributeIDColumn}
	)

	return leadSheetFieldAuditTrailsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                      IDColumn,
		EngagementsAuditTrailID: EngagementsAuditTrailIDColumn,
		TbAccountID:             TbAccountIDColumn,
		LeadSheetID:             LeadSheetIDColumn,
		AttributeType:           AttributeTypeColumn,
		AttributeID:             AttributeIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
