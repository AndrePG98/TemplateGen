//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EngagementControlActivityDetail = newEngagementControlActivityDetailTable("atlas-blue", "engagement_control_activity_detail", "")

type engagementControlActivityDetailTable struct {
	mysql.Table

	// Columns
	ID                               mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID                     mysql.ColumnString // (DC2Type:guid)
	HasManagementImplemented         mysql.ColumnBool
	DoIntendReply                    mysql.ColumnBool
	WillSubstantive                  mysql.ColumnBool
	IsValid                          mysql.ColumnBool
	IsAtLeastOneControlEvaluatedToDi mysql.ColumnBool
	IsAtLeastOneControlEvaluatedToOe mysql.ColumnBool
	AsoCr                            mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EngagementControlActivityDetailTable struct {
	engagementControlActivityDetailTable

	NEW engagementControlActivityDetailTable
}

// AS creates new EngagementControlActivityDetailTable with assigned alias
func (a EngagementControlActivityDetailTable) AS(alias string) *EngagementControlActivityDetailTable {
	return newEngagementControlActivityDetailTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EngagementControlActivityDetailTable with assigned schema name
func (a EngagementControlActivityDetailTable) FromSchema(schemaName string) *EngagementControlActivityDetailTable {
	return newEngagementControlActivityDetailTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EngagementControlActivityDetailTable with assigned table prefix
func (a EngagementControlActivityDetailTable) WithPrefix(prefix string) *EngagementControlActivityDetailTable {
	return newEngagementControlActivityDetailTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EngagementControlActivityDetailTable with assigned table suffix
func (a EngagementControlActivityDetailTable) WithSuffix(suffix string) *EngagementControlActivityDetailTable {
	return newEngagementControlActivityDetailTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEngagementControlActivityDetailTable(schemaName, tableName, alias string) *EngagementControlActivityDetailTable {
	return &EngagementControlActivityDetailTable{
		engagementControlActivityDetailTable: newEngagementControlActivityDetailTableImpl(schemaName, tableName, alias),
		NEW:                                  newEngagementControlActivityDetailTableImpl("", "new", ""),
	}
}

func newEngagementControlActivityDetailTableImpl(schemaName, tableName, alias string) engagementControlActivityDetailTable {
	var (
		IDColumn                               = mysql.StringColumn("id")
		EngagementIDColumn                     = mysql.StringColumn("engagement_id")
		HasManagementImplementedColumn         = mysql.BoolColumn("has_management_implemented")
		DoIntendReplyColumn                    = mysql.BoolColumn("do_intend_reply")
		WillSubstantiveColumn                  = mysql.BoolColumn("will_substantive")
		IsValidColumn                          = mysql.BoolColumn("is_valid")
		IsAtLeastOneControlEvaluatedToDiColumn = mysql.BoolColumn("is_at_least_one_control_evaluated_to_di")
		IsAtLeastOneControlEvaluatedToOeColumn = mysql.BoolColumn("is_at_least_one_control_evaluated_to_oe")
		AsoCrColumn                            = mysql.StringColumn("aso_cr")
		allColumns                             = mysql.ColumnList{IDColumn, EngagementIDColumn, HasManagementImplementedColumn, DoIntendReplyColumn, WillSubstantiveColumn, IsValidColumn, IsAtLeastOneControlEvaluatedToDiColumn, IsAtLeastOneControlEvaluatedToOeColumn, AsoCrColumn}
		mutableColumns                         = mysql.ColumnList{EngagementIDColumn, HasManagementImplementedColumn, DoIntendReplyColumn, WillSubstantiveColumn, IsValidColumn, IsAtLeastOneControlEvaluatedToDiColumn, IsAtLeastOneControlEvaluatedToOeColumn, AsoCrColumn}
	)

	return engagementControlActivityDetailTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                               IDColumn,
		EngagementID:                     EngagementIDColumn,
		HasManagementImplemented:         HasManagementImplementedColumn,
		DoIntendReply:                    DoIntendReplyColumn,
		WillSubstantive:                  WillSubstantiveColumn,
		IsValid:                          IsValidColumn,
		IsAtLeastOneControlEvaluatedToDi: IsAtLeastOneControlEvaluatedToDiColumn,
		IsAtLeastOneControlEvaluatedToOe: IsAtLeastOneControlEvaluatedToOeColumn,
		AsoCr:                            AsoCrColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
