//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ItgcPlannedEvaluation = newItgcPlannedEvaluationTable("atlas-blue", "itgc_planned_evaluation", "")

type itgcPlannedEvaluationTable struct {
	mysql.Table

	// Columns
	ID                                       mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	ItApplicationsItRisksItGeneralControlsID mysql.ColumnString // (DC2Type:guid)
	ContextID                                mysql.ColumnString
	PlannedEvaluationOfOe                    mysql.ColumnBool
	PlannedEvaluationOfDi                    mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ItgcPlannedEvaluationTable struct {
	itgcPlannedEvaluationTable

	NEW itgcPlannedEvaluationTable
}

// AS creates new ItgcPlannedEvaluationTable with assigned alias
func (a ItgcPlannedEvaluationTable) AS(alias string) *ItgcPlannedEvaluationTable {
	return newItgcPlannedEvaluationTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ItgcPlannedEvaluationTable with assigned schema name
func (a ItgcPlannedEvaluationTable) FromSchema(schemaName string) *ItgcPlannedEvaluationTable {
	return newItgcPlannedEvaluationTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ItgcPlannedEvaluationTable with assigned table prefix
func (a ItgcPlannedEvaluationTable) WithPrefix(prefix string) *ItgcPlannedEvaluationTable {
	return newItgcPlannedEvaluationTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ItgcPlannedEvaluationTable with assigned table suffix
func (a ItgcPlannedEvaluationTable) WithSuffix(suffix string) *ItgcPlannedEvaluationTable {
	return newItgcPlannedEvaluationTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newItgcPlannedEvaluationTable(schemaName, tableName, alias string) *ItgcPlannedEvaluationTable {
	return &ItgcPlannedEvaluationTable{
		itgcPlannedEvaluationTable: newItgcPlannedEvaluationTableImpl(schemaName, tableName, alias),
		NEW:                        newItgcPlannedEvaluationTableImpl("", "new", ""),
	}
}

func newItgcPlannedEvaluationTableImpl(schemaName, tableName, alias string) itgcPlannedEvaluationTable {
	var (
		IDColumn                                       = mysql.StringColumn("id")
		ItApplicationsItRisksItGeneralControlsIDColumn = mysql.StringColumn("it_applications_it_risks_it_general_controls_id")
		ContextIDColumn                                = mysql.StringColumn("context_id")
		PlannedEvaluationOfOeColumn                    = mysql.BoolColumn("planned_evaluation_of_oe")
		PlannedEvaluationOfDiColumn                    = mysql.BoolColumn("planned_evaluation_of_di")
		allColumns                                     = mysql.ColumnList{IDColumn, ItApplicationsItRisksItGeneralControlsIDColumn, ContextIDColumn, PlannedEvaluationOfOeColumn, PlannedEvaluationOfDiColumn}
		mutableColumns                                 = mysql.ColumnList{ItApplicationsItRisksItGeneralControlsIDColumn, ContextIDColumn, PlannedEvaluationOfOeColumn, PlannedEvaluationOfDiColumn}
	)

	return itgcPlannedEvaluationTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                                       IDColumn,
		ItApplicationsItRisksItGeneralControlsID: ItApplicationsItRisksItGeneralControlsIDColumn,
		ContextID:                                ContextIDColumn,
		PlannedEvaluationOfOe:                    PlannedEvaluationOfOeColumn,
		PlannedEvaluationOfDi:                    PlannedEvaluationOfDiColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
