//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Unlocks = newUnlocksTable("atlas-blue", "unlocks", "")

type unlocksTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID mysql.ColumnString // (DC2Type:guid)
	Status       mysql.ColumnString
	UnlockReason mysql.ColumnString
	CreatedAt    mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	UnlockedAt   mysql.ColumnTimestamp // (DC2Type:datetime_immutable)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type UnlocksTable struct {
	unlocksTable

	NEW unlocksTable
}

// AS creates new UnlocksTable with assigned alias
func (a UnlocksTable) AS(alias string) *UnlocksTable {
	return newUnlocksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UnlocksTable with assigned schema name
func (a UnlocksTable) FromSchema(schemaName string) *UnlocksTable {
	return newUnlocksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UnlocksTable with assigned table prefix
func (a UnlocksTable) WithPrefix(prefix string) *UnlocksTable {
	return newUnlocksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UnlocksTable with assigned table suffix
func (a UnlocksTable) WithSuffix(suffix string) *UnlocksTable {
	return newUnlocksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUnlocksTable(schemaName, tableName, alias string) *UnlocksTable {
	return &UnlocksTable{
		unlocksTable: newUnlocksTableImpl(schemaName, tableName, alias),
		NEW:          newUnlocksTableImpl("", "new", ""),
	}
}

func newUnlocksTableImpl(schemaName, tableName, alias string) unlocksTable {
	var (
		IDColumn           = mysql.StringColumn("id")
		EngagementIDColumn = mysql.StringColumn("engagement_id")
		StatusColumn       = mysql.StringColumn("status")
		UnlockReasonColumn = mysql.StringColumn("unlock_reason")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		UnlockedAtColumn   = mysql.TimestampColumn("unlocked_at")
		allColumns         = mysql.ColumnList{IDColumn, EngagementIDColumn, StatusColumn, UnlockReasonColumn, CreatedAtColumn, UnlockedAtColumn}
		mutableColumns     = mysql.ColumnList{EngagementIDColumn, StatusColumn, UnlockReasonColumn, CreatedAtColumn, UnlockedAtColumn}
	)

	return unlocksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		EngagementID: EngagementIDColumn,
		Status:       StatusColumn,
		UnlockReason: UnlockReasonColumn,
		CreatedAt:    CreatedAtColumn,
		UnlockedAt:   UnlockedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
