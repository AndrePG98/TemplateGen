//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Users = newUsersTable("atlas-blue", "users", "")

type usersTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	Email              mysql.ColumnString
	CreateDate         mysql.ColumnTimestamp
	UpdateDate         mysql.ColumnTimestamp
	FirstName          mysql.ColumnString
	LastName           mysql.ColumnString
	DefaultCountryCode mysql.ColumnString
	DefaultLocaleCode  mysql.ColumnString
	Status             mysql.ColumnString
	DefaultRole        mysql.ColumnString
	Password           mysql.ColumnString
	ComesFromTheGate   mysql.ColumnBool
	IsValid            mysql.ColumnBool
	LoginID            mysql.ColumnString
	EndDate            mysql.ColumnTimestamp
	ProvisionedBy      mysql.ColumnString
	ProvisionedOn      mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	ProvisionedIn      mysql.ColumnString
	InactivatedBy      mysql.ColumnString
	InactivatedOn      mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	ActivityTime       mysql.ColumnInteger
	ConnectionCount    mysql.ColumnInteger
	LastRequest        mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	LastLogin          mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	LastLogout         mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	NextLogout         mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	ModifiedBy         mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type UsersTable struct {
	usersTable

	NEW usersTable
}

// AS creates new UsersTable with assigned alias
func (a UsersTable) AS(alias string) *UsersTable {
	return newUsersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UsersTable with assigned schema name
func (a UsersTable) FromSchema(schemaName string) *UsersTable {
	return newUsersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UsersTable with assigned table prefix
func (a UsersTable) WithPrefix(prefix string) *UsersTable {
	return newUsersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UsersTable with assigned table suffix
func (a UsersTable) WithSuffix(suffix string) *UsersTable {
	return newUsersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUsersTable(schemaName, tableName, alias string) *UsersTable {
	return &UsersTable{
		usersTable: newUsersTableImpl(schemaName, tableName, alias),
		NEW:        newUsersTableImpl("", "new", ""),
	}
}

func newUsersTableImpl(schemaName, tableName, alias string) usersTable {
	var (
		IDColumn                 = mysql.StringColumn("id")
		EmailColumn              = mysql.StringColumn("email")
		CreateDateColumn         = mysql.TimestampColumn("create_date")
		UpdateDateColumn         = mysql.TimestampColumn("update_date")
		FirstNameColumn          = mysql.StringColumn("first_name")
		LastNameColumn           = mysql.StringColumn("last_name")
		DefaultCountryCodeColumn = mysql.StringColumn("default_country_code")
		DefaultLocaleCodeColumn  = mysql.StringColumn("default_locale_code")
		StatusColumn             = mysql.StringColumn("status")
		DefaultRoleColumn        = mysql.StringColumn("default_role")
		PasswordColumn           = mysql.StringColumn("password")
		ComesFromTheGateColumn   = mysql.BoolColumn("comes_from_the_gate")
		IsValidColumn            = mysql.BoolColumn("is_valid")
		LoginIDColumn            = mysql.StringColumn("login_id")
		EndDateColumn            = mysql.TimestampColumn("end_date")
		ProvisionedByColumn      = mysql.StringColumn("provisioned_by")
		ProvisionedOnColumn      = mysql.TimestampColumn("provisioned_on")
		ProvisionedInColumn      = mysql.StringColumn("provisioned_in")
		InactivatedByColumn      = mysql.StringColumn("inactivated_by")
		InactivatedOnColumn      = mysql.TimestampColumn("inactivated_on")
		ActivityTimeColumn       = mysql.IntegerColumn("activity_time")
		ConnectionCountColumn    = mysql.IntegerColumn("connection_count")
		LastRequestColumn        = mysql.TimestampColumn("last_request")
		LastLoginColumn          = mysql.TimestampColumn("last_login")
		LastLogoutColumn         = mysql.TimestampColumn("last_logout")
		NextLogoutColumn         = mysql.TimestampColumn("next_logout")
		ModifiedByColumn         = mysql.StringColumn("modified_by")
		allColumns               = mysql.ColumnList{IDColumn, EmailColumn, CreateDateColumn, UpdateDateColumn, FirstNameColumn, LastNameColumn, DefaultCountryCodeColumn, DefaultLocaleCodeColumn, StatusColumn, DefaultRoleColumn, PasswordColumn, ComesFromTheGateColumn, IsValidColumn, LoginIDColumn, EndDateColumn, ProvisionedByColumn, ProvisionedOnColumn, ProvisionedInColumn, InactivatedByColumn, InactivatedOnColumn, ActivityTimeColumn, ConnectionCountColumn, LastRequestColumn, LastLoginColumn, LastLogoutColumn, NextLogoutColumn, ModifiedByColumn}
		mutableColumns           = mysql.ColumnList{EmailColumn, CreateDateColumn, UpdateDateColumn, FirstNameColumn, LastNameColumn, DefaultCountryCodeColumn, DefaultLocaleCodeColumn, StatusColumn, DefaultRoleColumn, PasswordColumn, ComesFromTheGateColumn, IsValidColumn, LoginIDColumn, EndDateColumn, ProvisionedByColumn, ProvisionedOnColumn, ProvisionedInColumn, InactivatedByColumn, InactivatedOnColumn, ActivityTimeColumn, ConnectionCountColumn, LastRequestColumn, LastLoginColumn, LastLogoutColumn, NextLogoutColumn, ModifiedByColumn}
	)

	return usersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		Email:              EmailColumn,
		CreateDate:         CreateDateColumn,
		UpdateDate:         UpdateDateColumn,
		FirstName:          FirstNameColumn,
		LastName:           LastNameColumn,
		DefaultCountryCode: DefaultCountryCodeColumn,
		DefaultLocaleCode:  DefaultLocaleCodeColumn,
		Status:             StatusColumn,
		DefaultRole:        DefaultRoleColumn,
		Password:           PasswordColumn,
		ComesFromTheGate:   ComesFromTheGateColumn,
		IsValid:            IsValidColumn,
		LoginID:            LoginIDColumn,
		EndDate:            EndDateColumn,
		ProvisionedBy:      ProvisionedByColumn,
		ProvisionedOn:      ProvisionedOnColumn,
		ProvisionedIn:      ProvisionedInColumn,
		InactivatedBy:      InactivatedByColumn,
		InactivatedOn:      InactivatedOnColumn,
		ActivityTime:       ActivityTimeColumn,
		ConnectionCount:    ConnectionCountColumn,
		LastRequest:        LastRequestColumn,
		LastLogin:          LastLoginColumn,
		LastLogout:         LastLogoutColumn,
		NextLogout:         NextLogoutColumn,
		ModifiedBy:         ModifiedByColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
