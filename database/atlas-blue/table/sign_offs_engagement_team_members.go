//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var SignOffsEngagementTeamMembers = newSignOffsEngagementTeamMembersTable("atlas-blue", "sign_offs_engagement_team_members", "")

type signOffsEngagementTeamMembersTable struct {
	mysql.Table

	// Columns
	ID                         mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID               mysql.ColumnString // (DC2Type:guid)
	EngagementTeamMemberID     mysql.ColumnString // (DC2Type:guid)
	EngagementMasterfileNodeID mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type SignOffsEngagementTeamMembersTable struct {
	signOffsEngagementTeamMembersTable

	NEW signOffsEngagementTeamMembersTable
}

// AS creates new SignOffsEngagementTeamMembersTable with assigned alias
func (a SignOffsEngagementTeamMembersTable) AS(alias string) *SignOffsEngagementTeamMembersTable {
	return newSignOffsEngagementTeamMembersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SignOffsEngagementTeamMembersTable with assigned schema name
func (a SignOffsEngagementTeamMembersTable) FromSchema(schemaName string) *SignOffsEngagementTeamMembersTable {
	return newSignOffsEngagementTeamMembersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SignOffsEngagementTeamMembersTable with assigned table prefix
func (a SignOffsEngagementTeamMembersTable) WithPrefix(prefix string) *SignOffsEngagementTeamMembersTable {
	return newSignOffsEngagementTeamMembersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SignOffsEngagementTeamMembersTable with assigned table suffix
func (a SignOffsEngagementTeamMembersTable) WithSuffix(suffix string) *SignOffsEngagementTeamMembersTable {
	return newSignOffsEngagementTeamMembersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSignOffsEngagementTeamMembersTable(schemaName, tableName, alias string) *SignOffsEngagementTeamMembersTable {
	return &SignOffsEngagementTeamMembersTable{
		signOffsEngagementTeamMembersTable: newSignOffsEngagementTeamMembersTableImpl(schemaName, tableName, alias),
		NEW:                                newSignOffsEngagementTeamMembersTableImpl("", "new", ""),
	}
}

func newSignOffsEngagementTeamMembersTableImpl(schemaName, tableName, alias string) signOffsEngagementTeamMembersTable {
	var (
		IDColumn                         = mysql.StringColumn("id")
		EngagementIDColumn               = mysql.StringColumn("engagement_id")
		EngagementTeamMemberIDColumn     = mysql.StringColumn("engagement_team_member_id")
		EngagementMasterfileNodeIDColumn = mysql.StringColumn("engagement_masterfile_node_id")
		allColumns                       = mysql.ColumnList{IDColumn, EngagementIDColumn, EngagementTeamMemberIDColumn, EngagementMasterfileNodeIDColumn}
		mutableColumns                   = mysql.ColumnList{EngagementIDColumn, EngagementTeamMemberIDColumn, EngagementMasterfileNodeIDColumn}
	)

	return signOffsEngagementTeamMembersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                         IDColumn,
		EngagementID:               EngagementIDColumn,
		EngagementTeamMemberID:     EngagementTeamMemberIDColumn,
		EngagementMasterfileNodeID: EngagementMasterfileNodeIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
