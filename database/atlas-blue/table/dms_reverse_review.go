//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var DmsReverseReview = newDmsReverseReviewTable("atlas-blue", "dms_reverse_review", "")

type dmsReverseReviewTable struct {
	mysql.Table

	// Columns
	ID                  mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	DocumentID          mysql.ColumnInteger
	LastDocumentVersion mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type DmsReverseReviewTable struct {
	dmsReverseReviewTable

	NEW dmsReverseReviewTable
}

// AS creates new DmsReverseReviewTable with assigned alias
func (a DmsReverseReviewTable) AS(alias string) *DmsReverseReviewTable {
	return newDmsReverseReviewTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DmsReverseReviewTable with assigned schema name
func (a DmsReverseReviewTable) FromSchema(schemaName string) *DmsReverseReviewTable {
	return newDmsReverseReviewTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DmsReverseReviewTable with assigned table prefix
func (a DmsReverseReviewTable) WithPrefix(prefix string) *DmsReverseReviewTable {
	return newDmsReverseReviewTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DmsReverseReviewTable with assigned table suffix
func (a DmsReverseReviewTable) WithSuffix(suffix string) *DmsReverseReviewTable {
	return newDmsReverseReviewTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDmsReverseReviewTable(schemaName, tableName, alias string) *DmsReverseReviewTable {
	return &DmsReverseReviewTable{
		dmsReverseReviewTable: newDmsReverseReviewTableImpl(schemaName, tableName, alias),
		NEW:                   newDmsReverseReviewTableImpl("", "new", ""),
	}
}

func newDmsReverseReviewTableImpl(schemaName, tableName, alias string) dmsReverseReviewTable {
	var (
		IDColumn                  = mysql.StringColumn("id")
		DocumentIDColumn          = mysql.IntegerColumn("document_id")
		LastDocumentVersionColumn = mysql.IntegerColumn("last_document_version")
		allColumns                = mysql.ColumnList{IDColumn, DocumentIDColumn, LastDocumentVersionColumn}
		mutableColumns            = mysql.ColumnList{DocumentIDColumn, LastDocumentVersionColumn}
	)

	return dmsReverseReviewTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                  IDColumn,
		DocumentID:          DocumentIDColumn,
		LastDocumentVersion: LastDocumentVersionColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
