//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var RotationalTestingSummariesControls = newRotationalTestingSummariesControlsTable("atlas-blue", "rotational_testing_summaries_controls", "")

type rotationalTestingSummariesControlsTable struct {
	mysql.Table

	// Columns
	ID                                     mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	RotationalTestingSummaryID             mysql.ColumnString // (DC2Type:guid)
	NoChangeToControlDuringPeriodConfirmed mysql.ColumnBool
	PeriodMinus3SampleSize                 mysql.ColumnString
	PeriodMinus2SampleSize                 mysql.ColumnString
	PeriodMinus1SampleSize                 mysql.ColumnString
	Period0SampleSize                      mysql.ColumnString
	PeriodPlus1SampleSize                  mysql.ColumnString
	PeriodPlus2SampleSize                  mysql.ColumnString
	PeriodPlus3SampleSize                  mysql.ColumnString
	EngagementKbpControlID                 mysql.ColumnString // (DC2Type:guid)
	FslrControlID                          mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type RotationalTestingSummariesControlsTable struct {
	rotationalTestingSummariesControlsTable

	NEW rotationalTestingSummariesControlsTable
}

// AS creates new RotationalTestingSummariesControlsTable with assigned alias
func (a RotationalTestingSummariesControlsTable) AS(alias string) *RotationalTestingSummariesControlsTable {
	return newRotationalTestingSummariesControlsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new RotationalTestingSummariesControlsTable with assigned schema name
func (a RotationalTestingSummariesControlsTable) FromSchema(schemaName string) *RotationalTestingSummariesControlsTable {
	return newRotationalTestingSummariesControlsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new RotationalTestingSummariesControlsTable with assigned table prefix
func (a RotationalTestingSummariesControlsTable) WithPrefix(prefix string) *RotationalTestingSummariesControlsTable {
	return newRotationalTestingSummariesControlsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new RotationalTestingSummariesControlsTable with assigned table suffix
func (a RotationalTestingSummariesControlsTable) WithSuffix(suffix string) *RotationalTestingSummariesControlsTable {
	return newRotationalTestingSummariesControlsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newRotationalTestingSummariesControlsTable(schemaName, tableName, alias string) *RotationalTestingSummariesControlsTable {
	return &RotationalTestingSummariesControlsTable{
		rotationalTestingSummariesControlsTable: newRotationalTestingSummariesControlsTableImpl(schemaName, tableName, alias),
		NEW:                                     newRotationalTestingSummariesControlsTableImpl("", "new", ""),
	}
}

func newRotationalTestingSummariesControlsTableImpl(schemaName, tableName, alias string) rotationalTestingSummariesControlsTable {
	var (
		IDColumn                                     = mysql.StringColumn("id")
		RotationalTestingSummaryIDColumn             = mysql.StringColumn("rotational_testing_summary_id")
		NoChangeToControlDuringPeriodConfirmedColumn = mysql.BoolColumn("no_change_to_control_during_period_confirmed")
		PeriodMinus3SampleSizeColumn                 = mysql.StringColumn("period_minus_3_sample_size")
		PeriodMinus2SampleSizeColumn                 = mysql.StringColumn("period_minus_2_sample_size")
		PeriodMinus1SampleSizeColumn                 = mysql.StringColumn("period_minus_1_sample_size")
		Period0SampleSizeColumn                      = mysql.StringColumn("period_0_sample_size")
		PeriodPlus1SampleSizeColumn                  = mysql.StringColumn("period_plus_1_sample_size")
		PeriodPlus2SampleSizeColumn                  = mysql.StringColumn("period_plus_2_sample_size")
		PeriodPlus3SampleSizeColumn                  = mysql.StringColumn("period_plus_3_sample_size")
		EngagementKbpControlIDColumn                 = mysql.StringColumn("engagement_kbp_control_id")
		FslrControlIDColumn                          = mysql.StringColumn("fslr_control_id")
		allColumns                                   = mysql.ColumnList{IDColumn, RotationalTestingSummaryIDColumn, NoChangeToControlDuringPeriodConfirmedColumn, PeriodMinus3SampleSizeColumn, PeriodMinus2SampleSizeColumn, PeriodMinus1SampleSizeColumn, Period0SampleSizeColumn, PeriodPlus1SampleSizeColumn, PeriodPlus2SampleSizeColumn, PeriodPlus3SampleSizeColumn, EngagementKbpControlIDColumn, FslrControlIDColumn}
		mutableColumns                               = mysql.ColumnList{RotationalTestingSummaryIDColumn, NoChangeToControlDuringPeriodConfirmedColumn, PeriodMinus3SampleSizeColumn, PeriodMinus2SampleSizeColumn, PeriodMinus1SampleSizeColumn, Period0SampleSizeColumn, PeriodPlus1SampleSizeColumn, PeriodPlus2SampleSizeColumn, PeriodPlus3SampleSizeColumn, EngagementKbpControlIDColumn, FslrControlIDColumn}
	)

	return rotationalTestingSummariesControlsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                                     IDColumn,
		RotationalTestingSummaryID:             RotationalTestingSummaryIDColumn,
		NoChangeToControlDuringPeriodConfirmed: NoChangeToControlDuringPeriodConfirmedColumn,
		PeriodMinus3SampleSize:                 PeriodMinus3SampleSizeColumn,
		PeriodMinus2SampleSize:                 PeriodMinus2SampleSizeColumn,
		PeriodMinus1SampleSize:                 PeriodMinus1SampleSizeColumn,
		Period0SampleSize:                      Period0SampleSizeColumn,
		PeriodPlus1SampleSize:                  PeriodPlus1SampleSizeColumn,
		PeriodPlus2SampleSize:                  PeriodPlus2SampleSizeColumn,
		PeriodPlus3SampleSize:                  PeriodPlus3SampleSizeColumn,
		EngagementKbpControlID:                 EngagementKbpControlIDColumn,
		FslrControlID:                          FslrControlIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
