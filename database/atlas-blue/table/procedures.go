//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var Procedures = newProceduresTable("atlas-blue", "procedures", "")

type proceduresTable struct {
	mysql.Table

	// Columns
	ID                                       mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	KbpControlID                             mysql.ColumnString // (DC2Type:guid)
	ItControlID                              mysql.ColumnString // (DC2Type:guid)
	FslrControlID                            mysql.ColumnString // (DC2Type:guid)
	ProcedureTypeLovID                       mysql.ColumnString
	ResponsibilityLovID                      mysql.ColumnString
	Description                              mysql.ColumnString
	DetailedDescription                      mysql.ColumnString
	AddToCurrentEngagementInTheFuture        mysql.ColumnBool
	SourceID                                 mysql.ColumnString // Procedure id from customisation side
	IsMandatory                              mysql.ColumnBool
	CreatedAt                                mysql.ColumnDate   // (DC2Type:date_immutable)
	TeamMemberResponsibleID                  mysql.ColumnString // (DC2Type:guid)
	DescriptionLabel                         mysql.ColumnString // (DC2Type:json)
	DateLastDescriptionLabelModified         mysql.ColumnString // (DC2Type:json)
	DetailedDescriptionLabel                 mysql.ColumnString // (DC2Type:json)
	DateLastDetailedDescriptionLabelModified mysql.ColumnString // (DC2Type:json)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ProceduresTable struct {
	proceduresTable

	NEW proceduresTable
}

// AS creates new ProceduresTable with assigned alias
func (a ProceduresTable) AS(alias string) *ProceduresTable {
	return newProceduresTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ProceduresTable with assigned schema name
func (a ProceduresTable) FromSchema(schemaName string) *ProceduresTable {
	return newProceduresTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ProceduresTable with assigned table prefix
func (a ProceduresTable) WithPrefix(prefix string) *ProceduresTable {
	return newProceduresTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ProceduresTable with assigned table suffix
func (a ProceduresTable) WithSuffix(suffix string) *ProceduresTable {
	return newProceduresTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newProceduresTable(schemaName, tableName, alias string) *ProceduresTable {
	return &ProceduresTable{
		proceduresTable: newProceduresTableImpl(schemaName, tableName, alias),
		NEW:             newProceduresTableImpl("", "new", ""),
	}
}

func newProceduresTableImpl(schemaName, tableName, alias string) proceduresTable {
	var (
		IDColumn                                       = mysql.StringColumn("id")
		KbpControlIDColumn                             = mysql.StringColumn("kbp_control_id")
		ItControlIDColumn                              = mysql.StringColumn("it_control_id")
		FslrControlIDColumn                            = mysql.StringColumn("fslr_control_id")
		ProcedureTypeLovIDColumn                       = mysql.StringColumn("procedure_type_lov_id")
		ResponsibilityLovIDColumn                      = mysql.StringColumn("responsibility_lov_id")
		DescriptionColumn                              = mysql.StringColumn("description")
		DetailedDescriptionColumn                      = mysql.StringColumn("detailed_description")
		AddToCurrentEngagementInTheFutureColumn        = mysql.BoolColumn("add_to_current_engagement_in_the_future")
		SourceIDColumn                                 = mysql.StringColumn("source_id")
		IsMandatoryColumn                              = mysql.BoolColumn("is_mandatory")
		CreatedAtColumn                                = mysql.DateColumn("created_at")
		TeamMemberResponsibleIDColumn                  = mysql.StringColumn("team_member_responsible_id")
		DescriptionLabelColumn                         = mysql.StringColumn("description_label")
		DateLastDescriptionLabelModifiedColumn         = mysql.StringColumn("date_last_description_label_modified")
		DetailedDescriptionLabelColumn                 = mysql.StringColumn("detailed_description_label")
		DateLastDetailedDescriptionLabelModifiedColumn = mysql.StringColumn("date_last_detailed_description_label_modified")
		allColumns                                     = mysql.ColumnList{IDColumn, KbpControlIDColumn, ItControlIDColumn, FslrControlIDColumn, ProcedureTypeLovIDColumn, ResponsibilityLovIDColumn, DescriptionColumn, DetailedDescriptionColumn, AddToCurrentEngagementInTheFutureColumn, SourceIDColumn, IsMandatoryColumn, CreatedAtColumn, TeamMemberResponsibleIDColumn, DescriptionLabelColumn, DateLastDescriptionLabelModifiedColumn, DetailedDescriptionLabelColumn, DateLastDetailedDescriptionLabelModifiedColumn}
		mutableColumns                                 = mysql.ColumnList{KbpControlIDColumn, ItControlIDColumn, FslrControlIDColumn, ProcedureTypeLovIDColumn, ResponsibilityLovIDColumn, DescriptionColumn, DetailedDescriptionColumn, AddToCurrentEngagementInTheFutureColumn, SourceIDColumn, IsMandatoryColumn, CreatedAtColumn, TeamMemberResponsibleIDColumn, DescriptionLabelColumn, DateLastDescriptionLabelModifiedColumn, DetailedDescriptionLabelColumn, DateLastDetailedDescriptionLabelModifiedColumn}
	)

	return proceduresTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                                       IDColumn,
		KbpControlID:                             KbpControlIDColumn,
		ItControlID:                              ItControlIDColumn,
		FslrControlID:                            FslrControlIDColumn,
		ProcedureTypeLovID:                       ProcedureTypeLovIDColumn,
		ResponsibilityLovID:                      ResponsibilityLovIDColumn,
		Description:                              DescriptionColumn,
		DetailedDescription:                      DetailedDescriptionColumn,
		AddToCurrentEngagementInTheFuture:        AddToCurrentEngagementInTheFutureColumn,
		SourceID:                                 SourceIDColumn,
		IsMandatory:                              IsMandatoryColumn,
		CreatedAt:                                CreatedAtColumn,
		TeamMemberResponsibleID:                  TeamMemberResponsibleIDColumn,
		DescriptionLabel:                         DescriptionLabelColumn,
		DateLastDescriptionLabelModified:         DateLastDescriptionLabelModifiedColumn,
		DetailedDescriptionLabel:                 DetailedDescriptionLabelColumn,
		DateLastDetailedDescriptionLabelModified: DateLastDetailedDescriptionLabelModifiedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
