//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ItApplicationsItRisks = newItApplicationsItRisksTable("atlas-blue", "it_applications_it_risks", "")

type itApplicationsItRisksTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	ItApplicationID    mysql.ColumnString // (DC2Type:guid)
	ItRiskID           mysql.ColumnString // (DC2Type:guid)
	ItSubCategoryLovID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ItApplicationsItRisksTable struct {
	itApplicationsItRisksTable

	NEW itApplicationsItRisksTable
}

// AS creates new ItApplicationsItRisksTable with assigned alias
func (a ItApplicationsItRisksTable) AS(alias string) *ItApplicationsItRisksTable {
	return newItApplicationsItRisksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ItApplicationsItRisksTable with assigned schema name
func (a ItApplicationsItRisksTable) FromSchema(schemaName string) *ItApplicationsItRisksTable {
	return newItApplicationsItRisksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ItApplicationsItRisksTable with assigned table prefix
func (a ItApplicationsItRisksTable) WithPrefix(prefix string) *ItApplicationsItRisksTable {
	return newItApplicationsItRisksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ItApplicationsItRisksTable with assigned table suffix
func (a ItApplicationsItRisksTable) WithSuffix(suffix string) *ItApplicationsItRisksTable {
	return newItApplicationsItRisksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newItApplicationsItRisksTable(schemaName, tableName, alias string) *ItApplicationsItRisksTable {
	return &ItApplicationsItRisksTable{
		itApplicationsItRisksTable: newItApplicationsItRisksTableImpl(schemaName, tableName, alias),
		NEW:                        newItApplicationsItRisksTableImpl("", "new", ""),
	}
}

func newItApplicationsItRisksTableImpl(schemaName, tableName, alias string) itApplicationsItRisksTable {
	var (
		IDColumn                 = mysql.StringColumn("id")
		ItApplicationIDColumn    = mysql.StringColumn("it_application_id")
		ItRiskIDColumn           = mysql.StringColumn("it_risk_id")
		ItSubCategoryLovIDColumn = mysql.StringColumn("it_sub_category_lov_id")
		allColumns               = mysql.ColumnList{IDColumn, ItApplicationIDColumn, ItRiskIDColumn, ItSubCategoryLovIDColumn}
		mutableColumns           = mysql.ColumnList{ItApplicationIDColumn, ItRiskIDColumn, ItSubCategoryLovIDColumn}
	)

	return itApplicationsItRisksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		ItApplicationID:    ItApplicationIDColumn,
		ItRiskID:           ItRiskIDColumn,
		ItSubCategoryLovID: ItSubCategoryLovIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
