//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var DoctrineMigrationVersions = newDoctrineMigrationVersionsTable("atlas-blue", "doctrine_migration_versions", "")

type doctrineMigrationVersionsTable struct {
	mysql.Table

	// Columns
	Version       mysql.ColumnString
	ExecutedAt    mysql.ColumnTimestamp
	ExecutionTime mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type DoctrineMigrationVersionsTable struct {
	doctrineMigrationVersionsTable

	NEW doctrineMigrationVersionsTable
}

// AS creates new DoctrineMigrationVersionsTable with assigned alias
func (a DoctrineMigrationVersionsTable) AS(alias string) *DoctrineMigrationVersionsTable {
	return newDoctrineMigrationVersionsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DoctrineMigrationVersionsTable with assigned schema name
func (a DoctrineMigrationVersionsTable) FromSchema(schemaName string) *DoctrineMigrationVersionsTable {
	return newDoctrineMigrationVersionsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DoctrineMigrationVersionsTable with assigned table prefix
func (a DoctrineMigrationVersionsTable) WithPrefix(prefix string) *DoctrineMigrationVersionsTable {
	return newDoctrineMigrationVersionsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DoctrineMigrationVersionsTable with assigned table suffix
func (a DoctrineMigrationVersionsTable) WithSuffix(suffix string) *DoctrineMigrationVersionsTable {
	return newDoctrineMigrationVersionsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDoctrineMigrationVersionsTable(schemaName, tableName, alias string) *DoctrineMigrationVersionsTable {
	return &DoctrineMigrationVersionsTable{
		doctrineMigrationVersionsTable: newDoctrineMigrationVersionsTableImpl(schemaName, tableName, alias),
		NEW:                            newDoctrineMigrationVersionsTableImpl("", "new", ""),
	}
}

func newDoctrineMigrationVersionsTableImpl(schemaName, tableName, alias string) doctrineMigrationVersionsTable {
	var (
		VersionColumn       = mysql.StringColumn("version")
		ExecutedAtColumn    = mysql.TimestampColumn("executed_at")
		ExecutionTimeColumn = mysql.IntegerColumn("execution_time")
		allColumns          = mysql.ColumnList{VersionColumn, ExecutedAtColumn, ExecutionTimeColumn}
		mutableColumns      = mysql.ColumnList{ExecutedAtColumn, ExecutionTimeColumn}
	)

	return doctrineMigrationVersionsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Version:       VersionColumn,
		ExecutedAt:    ExecutedAtColumn,
		ExecutionTime: ExecutionTimeColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
