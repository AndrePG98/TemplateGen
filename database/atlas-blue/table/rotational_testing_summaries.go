//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var RotationalTestingSummaries = newRotationalTestingSummariesTable("atlas-blue", "rotational_testing_summaries", "")

type rotationalTestingSummariesTable struct {
	mysql.Table

	// Columns
	ID                           mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID                 mysql.ColumnString // (DC2Type:guid)
	NodeID                       mysql.ColumnString
	UseRotationalControlsSummary mysql.ColumnBool
	Status                       mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type RotationalTestingSummariesTable struct {
	rotationalTestingSummariesTable

	NEW rotationalTestingSummariesTable
}

// AS creates new RotationalTestingSummariesTable with assigned alias
func (a RotationalTestingSummariesTable) AS(alias string) *RotationalTestingSummariesTable {
	return newRotationalTestingSummariesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new RotationalTestingSummariesTable with assigned schema name
func (a RotationalTestingSummariesTable) FromSchema(schemaName string) *RotationalTestingSummariesTable {
	return newRotationalTestingSummariesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new RotationalTestingSummariesTable with assigned table prefix
func (a RotationalTestingSummariesTable) WithPrefix(prefix string) *RotationalTestingSummariesTable {
	return newRotationalTestingSummariesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new RotationalTestingSummariesTable with assigned table suffix
func (a RotationalTestingSummariesTable) WithSuffix(suffix string) *RotationalTestingSummariesTable {
	return newRotationalTestingSummariesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newRotationalTestingSummariesTable(schemaName, tableName, alias string) *RotationalTestingSummariesTable {
	return &RotationalTestingSummariesTable{
		rotationalTestingSummariesTable: newRotationalTestingSummariesTableImpl(schemaName, tableName, alias),
		NEW:                             newRotationalTestingSummariesTableImpl("", "new", ""),
	}
}

func newRotationalTestingSummariesTableImpl(schemaName, tableName, alias string) rotationalTestingSummariesTable {
	var (
		IDColumn                           = mysql.StringColumn("id")
		EngagementIDColumn                 = mysql.StringColumn("engagement_id")
		NodeIDColumn                       = mysql.StringColumn("node_id")
		UseRotationalControlsSummaryColumn = mysql.BoolColumn("use_rotational_controls_summary")
		StatusColumn                       = mysql.StringColumn("status")
		allColumns                         = mysql.ColumnList{IDColumn, EngagementIDColumn, NodeIDColumn, UseRotationalControlsSummaryColumn, StatusColumn}
		mutableColumns                     = mysql.ColumnList{EngagementIDColumn, NodeIDColumn, UseRotationalControlsSummaryColumn, StatusColumn}
	)

	return rotationalTestingSummariesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                           IDColumn,
		EngagementID:                 EngagementIDColumn,
		NodeID:                       NodeIDColumn,
		UseRotationalControlsSummary: UseRotationalControlsSummaryColumn,
		Status:                       StatusColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
