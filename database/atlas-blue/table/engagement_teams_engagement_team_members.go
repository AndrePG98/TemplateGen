//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EngagementTeamsEngagementTeamMembers = newEngagementTeamsEngagementTeamMembersTable("atlas-blue", "engagement_teams_engagement_team_members", "")

type engagementTeamsEngagementTeamMembersTable struct {
	mysql.Table

	// Columns
	EngagementTeamID       mysql.ColumnString // (DC2Type:guid)
	EngagementTeamMemberID mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EngagementTeamsEngagementTeamMembersTable struct {
	engagementTeamsEngagementTeamMembersTable

	NEW engagementTeamsEngagementTeamMembersTable
}

// AS creates new EngagementTeamsEngagementTeamMembersTable with assigned alias
func (a EngagementTeamsEngagementTeamMembersTable) AS(alias string) *EngagementTeamsEngagementTeamMembersTable {
	return newEngagementTeamsEngagementTeamMembersTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EngagementTeamsEngagementTeamMembersTable with assigned schema name
func (a EngagementTeamsEngagementTeamMembersTable) FromSchema(schemaName string) *EngagementTeamsEngagementTeamMembersTable {
	return newEngagementTeamsEngagementTeamMembersTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EngagementTeamsEngagementTeamMembersTable with assigned table prefix
func (a EngagementTeamsEngagementTeamMembersTable) WithPrefix(prefix string) *EngagementTeamsEngagementTeamMembersTable {
	return newEngagementTeamsEngagementTeamMembersTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EngagementTeamsEngagementTeamMembersTable with assigned table suffix
func (a EngagementTeamsEngagementTeamMembersTable) WithSuffix(suffix string) *EngagementTeamsEngagementTeamMembersTable {
	return newEngagementTeamsEngagementTeamMembersTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEngagementTeamsEngagementTeamMembersTable(schemaName, tableName, alias string) *EngagementTeamsEngagementTeamMembersTable {
	return &EngagementTeamsEngagementTeamMembersTable{
		engagementTeamsEngagementTeamMembersTable: newEngagementTeamsEngagementTeamMembersTableImpl(schemaName, tableName, alias),
		NEW: newEngagementTeamsEngagementTeamMembersTableImpl("", "new", ""),
	}
}

func newEngagementTeamsEngagementTeamMembersTableImpl(schemaName, tableName, alias string) engagementTeamsEngagementTeamMembersTable {
	var (
		EngagementTeamIDColumn       = mysql.StringColumn("engagement_team_id")
		EngagementTeamMemberIDColumn = mysql.StringColumn("engagement_team_member_id")
		allColumns                   = mysql.ColumnList{EngagementTeamIDColumn, EngagementTeamMemberIDColumn}
		mutableColumns               = mysql.ColumnList{}
	)

	return engagementTeamsEngagementTeamMembersTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		EngagementTeamID:       EngagementTeamIDColumn,
		EngagementTeamMemberID: EngagementTeamMemberIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
