//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MasterServicesProvided = newMasterServicesProvidedTable("atlas-blue", "master_services_provided", "")

type masterServicesProvidedTable struct {
	mysql.Table

	// Columns
	Service       mysql.ColumnString
	EntityService mysql.ColumnString // (DC2Type:guid)
	Entity        mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MasterServicesProvidedTable struct {
	masterServicesProvidedTable

	NEW masterServicesProvidedTable
}

// AS creates new MasterServicesProvidedTable with assigned alias
func (a MasterServicesProvidedTable) AS(alias string) *MasterServicesProvidedTable {
	return newMasterServicesProvidedTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MasterServicesProvidedTable with assigned schema name
func (a MasterServicesProvidedTable) FromSchema(schemaName string) *MasterServicesProvidedTable {
	return newMasterServicesProvidedTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MasterServicesProvidedTable with assigned table prefix
func (a MasterServicesProvidedTable) WithPrefix(prefix string) *MasterServicesProvidedTable {
	return newMasterServicesProvidedTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MasterServicesProvidedTable with assigned table suffix
func (a MasterServicesProvidedTable) WithSuffix(suffix string) *MasterServicesProvidedTable {
	return newMasterServicesProvidedTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMasterServicesProvidedTable(schemaName, tableName, alias string) *MasterServicesProvidedTable {
	return &MasterServicesProvidedTable{
		masterServicesProvidedTable: newMasterServicesProvidedTableImpl(schemaName, tableName, alias),
		NEW:                         newMasterServicesProvidedTableImpl("", "new", ""),
	}
}

func newMasterServicesProvidedTableImpl(schemaName, tableName, alias string) masterServicesProvidedTable {
	var (
		ServiceColumn       = mysql.StringColumn("service")
		EntityServiceColumn = mysql.StringColumn("entity_service")
		EntityColumn        = mysql.StringColumn("entity")
		allColumns          = mysql.ColumnList{ServiceColumn, EntityServiceColumn, EntityColumn}
		mutableColumns      = mysql.ColumnList{}
	)

	return masterServicesProvidedTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Service:       ServiceColumn,
		EntityService: EntityServiceColumn,
		Entity:        EntityColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
