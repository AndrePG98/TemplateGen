//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TbAccountsFsaCotabds = newTbAccountsFsaCotabdsTable("atlas-blue", "tb_accounts_fsa_cotabds", "")

type tbAccountsFsaCotabdsTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID mysql.ColumnString // (DC2Type:guid)
	TbAccount    mysql.ColumnString // (DC2Type:guid)
	FsaID        mysql.ColumnString
	CotadbName   mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TbAccountsFsaCotabdsTable struct {
	tbAccountsFsaCotabdsTable

	NEW tbAccountsFsaCotabdsTable
}

// AS creates new TbAccountsFsaCotabdsTable with assigned alias
func (a TbAccountsFsaCotabdsTable) AS(alias string) *TbAccountsFsaCotabdsTable {
	return newTbAccountsFsaCotabdsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TbAccountsFsaCotabdsTable with assigned schema name
func (a TbAccountsFsaCotabdsTable) FromSchema(schemaName string) *TbAccountsFsaCotabdsTable {
	return newTbAccountsFsaCotabdsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TbAccountsFsaCotabdsTable with assigned table prefix
func (a TbAccountsFsaCotabdsTable) WithPrefix(prefix string) *TbAccountsFsaCotabdsTable {
	return newTbAccountsFsaCotabdsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TbAccountsFsaCotabdsTable with assigned table suffix
func (a TbAccountsFsaCotabdsTable) WithSuffix(suffix string) *TbAccountsFsaCotabdsTable {
	return newTbAccountsFsaCotabdsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTbAccountsFsaCotabdsTable(schemaName, tableName, alias string) *TbAccountsFsaCotabdsTable {
	return &TbAccountsFsaCotabdsTable{
		tbAccountsFsaCotabdsTable: newTbAccountsFsaCotabdsTableImpl(schemaName, tableName, alias),
		NEW:                       newTbAccountsFsaCotabdsTableImpl("", "new", ""),
	}
}

func newTbAccountsFsaCotabdsTableImpl(schemaName, tableName, alias string) tbAccountsFsaCotabdsTable {
	var (
		IDColumn           = mysql.StringColumn("id")
		EngagementIDColumn = mysql.StringColumn("engagement_id")
		TbAccountColumn    = mysql.StringColumn("tb_account")
		FsaIDColumn        = mysql.StringColumn("fsa_id")
		CotadbNameColumn   = mysql.StringColumn("cotadb_name")
		allColumns         = mysql.ColumnList{IDColumn, EngagementIDColumn, TbAccountColumn, FsaIDColumn, CotadbNameColumn}
		mutableColumns     = mysql.ColumnList{EngagementIDColumn, TbAccountColumn, FsaIDColumn, CotadbNameColumn}
	)

	return tbAccountsFsaCotabdsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		EngagementID: EngagementIDColumn,
		TbAccount:    TbAccountColumn,
		FsaID:        FsaIDColumn,
		CotadbName:   CotadbNameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
