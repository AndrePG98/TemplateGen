//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MaterialitySpecificMateriality = newMaterialitySpecificMaterialityTable("atlas-blue", "materiality_specific_materiality", "")

type materialitySpecificMaterialityTable struct {
	mysql.Table

	// Columns
	ID                                           mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	SpecificMaterialityID                        mysql.ColumnString // (DC2Type:guid)
	Amount                                       mysql.ColumnFloat
	SpecificFinancialStatementMaterialityPercent mysql.ColumnFloat
	SpecificPerformanceMaterialityPercent        mysql.ColumnFloat
	Rationale                                    mysql.ColumnString
	CotabdID                                     mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MaterialitySpecificMaterialityTable struct {
	materialitySpecificMaterialityTable

	NEW materialitySpecificMaterialityTable
}

// AS creates new MaterialitySpecificMaterialityTable with assigned alias
func (a MaterialitySpecificMaterialityTable) AS(alias string) *MaterialitySpecificMaterialityTable {
	return newMaterialitySpecificMaterialityTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MaterialitySpecificMaterialityTable with assigned schema name
func (a MaterialitySpecificMaterialityTable) FromSchema(schemaName string) *MaterialitySpecificMaterialityTable {
	return newMaterialitySpecificMaterialityTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MaterialitySpecificMaterialityTable with assigned table prefix
func (a MaterialitySpecificMaterialityTable) WithPrefix(prefix string) *MaterialitySpecificMaterialityTable {
	return newMaterialitySpecificMaterialityTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MaterialitySpecificMaterialityTable with assigned table suffix
func (a MaterialitySpecificMaterialityTable) WithSuffix(suffix string) *MaterialitySpecificMaterialityTable {
	return newMaterialitySpecificMaterialityTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMaterialitySpecificMaterialityTable(schemaName, tableName, alias string) *MaterialitySpecificMaterialityTable {
	return &MaterialitySpecificMaterialityTable{
		materialitySpecificMaterialityTable: newMaterialitySpecificMaterialityTableImpl(schemaName, tableName, alias),
		NEW:                                 newMaterialitySpecificMaterialityTableImpl("", "new", ""),
	}
}

func newMaterialitySpecificMaterialityTableImpl(schemaName, tableName, alias string) materialitySpecificMaterialityTable {
	var (
		IDColumn                                           = mysql.StringColumn("id")
		SpecificMaterialityIDColumn                        = mysql.StringColumn("specific_materiality_id")
		AmountColumn                                       = mysql.FloatColumn("amount")
		SpecificFinancialStatementMaterialityPercentColumn = mysql.FloatColumn("specific_financial_statement_materiality_percent")
		SpecificPerformanceMaterialityPercentColumn        = mysql.FloatColumn("specific_performance_materiality_percent")
		RationaleColumn                                    = mysql.StringColumn("rationale")
		CotabdIDColumn                                     = mysql.StringColumn("cotabd_id")
		allColumns                                         = mysql.ColumnList{IDColumn, SpecificMaterialityIDColumn, AmountColumn, SpecificFinancialStatementMaterialityPercentColumn, SpecificPerformanceMaterialityPercentColumn, RationaleColumn, CotabdIDColumn}
		mutableColumns                                     = mysql.ColumnList{SpecificMaterialityIDColumn, AmountColumn, SpecificFinancialStatementMaterialityPercentColumn, SpecificPerformanceMaterialityPercentColumn, RationaleColumn, CotabdIDColumn}
	)

	return materialitySpecificMaterialityTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                    IDColumn,
		SpecificMaterialityID: SpecificMaterialityIDColumn,
		Amount:                AmountColumn,
		SpecificFinancialStatementMaterialityPercent: SpecificFinancialStatementMaterialityPercentColumn,
		SpecificPerformanceMaterialityPercent:        SpecificPerformanceMaterialityPercentColumn,
		Rationale:                                    RationaleColumn,
		CotabdID:                                     CotabdIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
