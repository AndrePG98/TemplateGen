//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MinutesOfMeetingsMasterContactGroups = newMinutesOfMeetingsMasterContactGroupsTable("atlas-blue", "minutes_of_meetings_master_contact_groups", "")

type minutesOfMeetingsMasterContactGroupsTable struct {
	mysql.Table

	// Columns
	MinuteOfMeetingID    mysql.ColumnString // (DC2Type:guid)
	MasterContactGroupID mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MinutesOfMeetingsMasterContactGroupsTable struct {
	minutesOfMeetingsMasterContactGroupsTable

	NEW minutesOfMeetingsMasterContactGroupsTable
}

// AS creates new MinutesOfMeetingsMasterContactGroupsTable with assigned alias
func (a MinutesOfMeetingsMasterContactGroupsTable) AS(alias string) *MinutesOfMeetingsMasterContactGroupsTable {
	return newMinutesOfMeetingsMasterContactGroupsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MinutesOfMeetingsMasterContactGroupsTable with assigned schema name
func (a MinutesOfMeetingsMasterContactGroupsTable) FromSchema(schemaName string) *MinutesOfMeetingsMasterContactGroupsTable {
	return newMinutesOfMeetingsMasterContactGroupsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MinutesOfMeetingsMasterContactGroupsTable with assigned table prefix
func (a MinutesOfMeetingsMasterContactGroupsTable) WithPrefix(prefix string) *MinutesOfMeetingsMasterContactGroupsTable {
	return newMinutesOfMeetingsMasterContactGroupsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MinutesOfMeetingsMasterContactGroupsTable with assigned table suffix
func (a MinutesOfMeetingsMasterContactGroupsTable) WithSuffix(suffix string) *MinutesOfMeetingsMasterContactGroupsTable {
	return newMinutesOfMeetingsMasterContactGroupsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMinutesOfMeetingsMasterContactGroupsTable(schemaName, tableName, alias string) *MinutesOfMeetingsMasterContactGroupsTable {
	return &MinutesOfMeetingsMasterContactGroupsTable{
		minutesOfMeetingsMasterContactGroupsTable: newMinutesOfMeetingsMasterContactGroupsTableImpl(schemaName, tableName, alias),
		NEW: newMinutesOfMeetingsMasterContactGroupsTableImpl("", "new", ""),
	}
}

func newMinutesOfMeetingsMasterContactGroupsTableImpl(schemaName, tableName, alias string) minutesOfMeetingsMasterContactGroupsTable {
	var (
		MinuteOfMeetingIDColumn    = mysql.StringColumn("minute_of_meeting_id")
		MasterContactGroupIDColumn = mysql.StringColumn("master_contact_group_id")
		allColumns                 = mysql.ColumnList{MinuteOfMeetingIDColumn, MasterContactGroupIDColumn}
		mutableColumns             = mysql.ColumnList{}
	)

	return minutesOfMeetingsMasterContactGroupsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MinuteOfMeetingID:    MinuteOfMeetingIDColumn,
		MasterContactGroupID: MasterContactGroupIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
