//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var AsyncJobsLocks = newAsyncJobsLocksTable("atlas-blue", "async_jobs_locks", "")

type asyncJobsLocksTable struct {
	mysql.Table

	// Columns
	Key     mysql.ColumnString
	Class   mysql.ColumnString
	Expires mysql.ColumnInteger

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type AsyncJobsLocksTable struct {
	asyncJobsLocksTable

	NEW asyncJobsLocksTable
}

// AS creates new AsyncJobsLocksTable with assigned alias
func (a AsyncJobsLocksTable) AS(alias string) *AsyncJobsLocksTable {
	return newAsyncJobsLocksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new AsyncJobsLocksTable with assigned schema name
func (a AsyncJobsLocksTable) FromSchema(schemaName string) *AsyncJobsLocksTable {
	return newAsyncJobsLocksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new AsyncJobsLocksTable with assigned table prefix
func (a AsyncJobsLocksTable) WithPrefix(prefix string) *AsyncJobsLocksTable {
	return newAsyncJobsLocksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new AsyncJobsLocksTable with assigned table suffix
func (a AsyncJobsLocksTable) WithSuffix(suffix string) *AsyncJobsLocksTable {
	return newAsyncJobsLocksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newAsyncJobsLocksTable(schemaName, tableName, alias string) *AsyncJobsLocksTable {
	return &AsyncJobsLocksTable{
		asyncJobsLocksTable: newAsyncJobsLocksTableImpl(schemaName, tableName, alias),
		NEW:                 newAsyncJobsLocksTableImpl("", "new", ""),
	}
}

func newAsyncJobsLocksTableImpl(schemaName, tableName, alias string) asyncJobsLocksTable {
	var (
		KeyColumn      = mysql.StringColumn("key")
		ClassColumn    = mysql.StringColumn("class")
		ExpiresColumn  = mysql.IntegerColumn("expires")
		allColumns     = mysql.ColumnList{KeyColumn, ClassColumn, ExpiresColumn}
		mutableColumns = mysql.ColumnList{ClassColumn, ExpiresColumn}
	)

	return asyncJobsLocksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		Key:     KeyColumn,
		Class:   ClassColumn,
		Expires: ExpiresColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
