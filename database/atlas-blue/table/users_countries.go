//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var UsersCountries = newUsersCountriesTable("atlas-blue", "users_countries", "")

type usersCountriesTable struct {
	mysql.Table

	// Columns
	UserID    mysql.ColumnString // (DC2Type:guid)
	CountryID mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type UsersCountriesTable struct {
	usersCountriesTable

	NEW usersCountriesTable
}

// AS creates new UsersCountriesTable with assigned alias
func (a UsersCountriesTable) AS(alias string) *UsersCountriesTable {
	return newUsersCountriesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UsersCountriesTable with assigned schema name
func (a UsersCountriesTable) FromSchema(schemaName string) *UsersCountriesTable {
	return newUsersCountriesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UsersCountriesTable with assigned table prefix
func (a UsersCountriesTable) WithPrefix(prefix string) *UsersCountriesTable {
	return newUsersCountriesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UsersCountriesTable with assigned table suffix
func (a UsersCountriesTable) WithSuffix(suffix string) *UsersCountriesTable {
	return newUsersCountriesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUsersCountriesTable(schemaName, tableName, alias string) *UsersCountriesTable {
	return &UsersCountriesTable{
		usersCountriesTable: newUsersCountriesTableImpl(schemaName, tableName, alias),
		NEW:                 newUsersCountriesTableImpl("", "new", ""),
	}
}

func newUsersCountriesTableImpl(schemaName, tableName, alias string) usersCountriesTable {
	var (
		UserIDColumn    = mysql.StringColumn("user_id")
		CountryIDColumn = mysql.StringColumn("country_id")
		allColumns      = mysql.ColumnList{UserIDColumn, CountryIDColumn}
		mutableColumns  = mysql.ColumnList{}
	)

	return usersCountriesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserID:    UserIDColumn,
		CountryID: CountryIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
