//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EngagementRetrievingRequests = newEngagementRetrievingRequestsTable("atlas-blue", "engagement_retrieving_requests", "")

type engagementRetrievingRequestsTable struct {
	mysql.Table

	// Columns
	ID                       mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID             mysql.ColumnString // (DC2Type:guid)
	UserRequestingRetrieval  mysql.ColumnString // (DC2Type:guid)
	RequestedApprovalPartner mysql.ColumnString // (DC2Type:guid)
	InitiatedBy              mysql.ColumnString // (DC2Type:guid)
	ReasonForRetrievingID    mysql.ColumnInteger
	AdditionalComment        mysql.ColumnString
	ReasonForPartnerChange   mysql.ColumnString
	ReasonForRejection       mysql.ColumnString
	InitiatedOn              mysql.ColumnDate
	State                    mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EngagementRetrievingRequestsTable struct {
	engagementRetrievingRequestsTable

	NEW engagementRetrievingRequestsTable
}

// AS creates new EngagementRetrievingRequestsTable with assigned alias
func (a EngagementRetrievingRequestsTable) AS(alias string) *EngagementRetrievingRequestsTable {
	return newEngagementRetrievingRequestsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EngagementRetrievingRequestsTable with assigned schema name
func (a EngagementRetrievingRequestsTable) FromSchema(schemaName string) *EngagementRetrievingRequestsTable {
	return newEngagementRetrievingRequestsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EngagementRetrievingRequestsTable with assigned table prefix
func (a EngagementRetrievingRequestsTable) WithPrefix(prefix string) *EngagementRetrievingRequestsTable {
	return newEngagementRetrievingRequestsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EngagementRetrievingRequestsTable with assigned table suffix
func (a EngagementRetrievingRequestsTable) WithSuffix(suffix string) *EngagementRetrievingRequestsTable {
	return newEngagementRetrievingRequestsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEngagementRetrievingRequestsTable(schemaName, tableName, alias string) *EngagementRetrievingRequestsTable {
	return &EngagementRetrievingRequestsTable{
		engagementRetrievingRequestsTable: newEngagementRetrievingRequestsTableImpl(schemaName, tableName, alias),
		NEW:                               newEngagementRetrievingRequestsTableImpl("", "new", ""),
	}
}

func newEngagementRetrievingRequestsTableImpl(schemaName, tableName, alias string) engagementRetrievingRequestsTable {
	var (
		IDColumn                       = mysql.StringColumn("id")
		EngagementIDColumn             = mysql.StringColumn("engagement_id")
		UserRequestingRetrievalColumn  = mysql.StringColumn("user_requesting_retrieval")
		RequestedApprovalPartnerColumn = mysql.StringColumn("requested_approval_partner")
		InitiatedByColumn              = mysql.StringColumn("initiated_by")
		ReasonForRetrievingIDColumn    = mysql.IntegerColumn("reason_for_retrieving_id")
		AdditionalCommentColumn        = mysql.StringColumn("additional_comment")
		ReasonForPartnerChangeColumn   = mysql.StringColumn("reason_for_partner_change")
		ReasonForRejectionColumn       = mysql.StringColumn("reason_for_rejection")
		InitiatedOnColumn              = mysql.DateColumn("initiated_on")
		StateColumn                    = mysql.StringColumn("state")
		allColumns                     = mysql.ColumnList{IDColumn, EngagementIDColumn, UserRequestingRetrievalColumn, RequestedApprovalPartnerColumn, InitiatedByColumn, ReasonForRetrievingIDColumn, AdditionalCommentColumn, ReasonForPartnerChangeColumn, ReasonForRejectionColumn, InitiatedOnColumn, StateColumn}
		mutableColumns                 = mysql.ColumnList{EngagementIDColumn, UserRequestingRetrievalColumn, RequestedApprovalPartnerColumn, InitiatedByColumn, ReasonForRetrievingIDColumn, AdditionalCommentColumn, ReasonForPartnerChangeColumn, ReasonForRejectionColumn, InitiatedOnColumn, StateColumn}
	)

	return engagementRetrievingRequestsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                       IDColumn,
		EngagementID:             EngagementIDColumn,
		UserRequestingRetrieval:  UserRequestingRetrievalColumn,
		RequestedApprovalPartner: RequestedApprovalPartnerColumn,
		InitiatedBy:              InitiatedByColumn,
		ReasonForRetrievingID:    ReasonForRetrievingIDColumn,
		AdditionalComment:        AdditionalCommentColumn,
		ReasonForPartnerChange:   ReasonForPartnerChangeColumn,
		ReasonForRejection:       ReasonForRejectionColumn,
		InitiatedOn:              InitiatedOnColumn,
		State:                    StateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
