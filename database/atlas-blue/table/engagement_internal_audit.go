//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EngagementInternalAudit = newEngagementInternalAuditTable("atlas-blue", "engagement_internal_audit", "")

type engagementInternalAuditTable struct {
	mysql.Table

	// Columns
	ID                                            mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID                                  mysql.ColumnString // (DC2Type:guid)
	NameContactQualificationsExperience           mysql.ColumnString
	NatureResponsibilitiesActivities              mysql.ColumnString
	FraudAffectingEntityAndViewsAboutRisks        mysql.ColumnString
	DoesInquiredWithIndividuals                   mysql.ColumnBool
	DetailsFromInquiries                          mysql.ColumnString
	DoYouPlanToUseTheWorkPerformedByInternalAudit mysql.ColumnBool
	ExtentThatSupportsTheObjectivity              mysql.ColumnString
	CompetenceOfTheInternalAuditFunction          mysql.ColumnString
	IsSystematicAndDisciplinedApproachApplied     mysql.ColumnString
	RelianceCanBePlacedOnInternalAudit            mysql.ColumnBool
	RelianceComment                               mysql.ColumnString
	NatureAndScopeOfWorkPerformed                 mysql.ColumnString
	EvaluationOnUsingTheWorkOfTheInternalAudit    mysql.ColumnString
	HaveYouCommunicatedOnHowTheAuditIsUsed        mysql.ColumnBool
	CommunicationComment                          mysql.ColumnString
	InternalAuditFunctionDiscussed                mysql.ColumnBool
	DocumentationOfDiscussion                     mysql.ColumnString
	ExplanationOfWhyDiscussionIsNotApplicable     mysql.ColumnString
	IsValid                                       mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EngagementInternalAuditTable struct {
	engagementInternalAuditTable

	NEW engagementInternalAuditTable
}

// AS creates new EngagementInternalAuditTable with assigned alias
func (a EngagementInternalAuditTable) AS(alias string) *EngagementInternalAuditTable {
	return newEngagementInternalAuditTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EngagementInternalAuditTable with assigned schema name
func (a EngagementInternalAuditTable) FromSchema(schemaName string) *EngagementInternalAuditTable {
	return newEngagementInternalAuditTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EngagementInternalAuditTable with assigned table prefix
func (a EngagementInternalAuditTable) WithPrefix(prefix string) *EngagementInternalAuditTable {
	return newEngagementInternalAuditTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EngagementInternalAuditTable with assigned table suffix
func (a EngagementInternalAuditTable) WithSuffix(suffix string) *EngagementInternalAuditTable {
	return newEngagementInternalAuditTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEngagementInternalAuditTable(schemaName, tableName, alias string) *EngagementInternalAuditTable {
	return &EngagementInternalAuditTable{
		engagementInternalAuditTable: newEngagementInternalAuditTableImpl(schemaName, tableName, alias),
		NEW:                          newEngagementInternalAuditTableImpl("", "new", ""),
	}
}

func newEngagementInternalAuditTableImpl(schemaName, tableName, alias string) engagementInternalAuditTable {
	var (
		IDColumn                                            = mysql.StringColumn("id")
		EngagementIDColumn                                  = mysql.StringColumn("engagement_id")
		NameContactQualificationsExperienceColumn           = mysql.StringColumn("name_contact_qualifications_experience")
		NatureResponsibilitiesActivitiesColumn              = mysql.StringColumn("nature_responsibilities_activities")
		FraudAffectingEntityAndViewsAboutRisksColumn        = mysql.StringColumn("fraud_affecting_entity_and_views_about_risks")
		DoesInquiredWithIndividualsColumn                   = mysql.BoolColumn("does_inquired_with_individuals")
		DetailsFromInquiriesColumn                          = mysql.StringColumn("details_from_inquiries")
		DoYouPlanToUseTheWorkPerformedByInternalAuditColumn = mysql.BoolColumn("do_you_plan_to_use_the_work_performed_by_internal_audit")
		ExtentThatSupportsTheObjectivityColumn              = mysql.StringColumn("extent_that_supports_the_objectivity")
		CompetenceOfTheInternalAuditFunctionColumn          = mysql.StringColumn("competence_of_the_internal_audit_function")
		IsSystematicAndDisciplinedApproachAppliedColumn     = mysql.StringColumn("is_systematic_and_disciplined_approach_applied")
		RelianceCanBePlacedOnInternalAuditColumn            = mysql.BoolColumn("reliance_can_be_placed_on_internal_audit")
		RelianceCommentColumn                               = mysql.StringColumn("reliance_comment")
		NatureAndScopeOfWorkPerformedColumn                 = mysql.StringColumn("nature_and_scope_of_work_performed")
		EvaluationOnUsingTheWorkOfTheInternalAuditColumn    = mysql.StringColumn("evaluation_on_using_the_work_of_the_internal_audit")
		HaveYouCommunicatedOnHowTheAuditIsUsedColumn        = mysql.BoolColumn("have_you_communicated_on_how_the_audit_is_used")
		CommunicationCommentColumn                          = mysql.StringColumn("communication_comment")
		InternalAuditFunctionDiscussedColumn                = mysql.BoolColumn("internal_audit_function_discussed")
		DocumentationOfDiscussionColumn                     = mysql.StringColumn("documentation_of_discussion")
		ExplanationOfWhyDiscussionIsNotApplicableColumn     = mysql.StringColumn("explanation_of_why_discussion_is_not_applicable")
		IsValidColumn                                       = mysql.BoolColumn("is_valid")
		allColumns                                          = mysql.ColumnList{IDColumn, EngagementIDColumn, NameContactQualificationsExperienceColumn, NatureResponsibilitiesActivitiesColumn, FraudAffectingEntityAndViewsAboutRisksColumn, DoesInquiredWithIndividualsColumn, DetailsFromInquiriesColumn, DoYouPlanToUseTheWorkPerformedByInternalAuditColumn, ExtentThatSupportsTheObjectivityColumn, CompetenceOfTheInternalAuditFunctionColumn, IsSystematicAndDisciplinedApproachAppliedColumn, RelianceCanBePlacedOnInternalAuditColumn, RelianceCommentColumn, NatureAndScopeOfWorkPerformedColumn, EvaluationOnUsingTheWorkOfTheInternalAuditColumn, HaveYouCommunicatedOnHowTheAuditIsUsedColumn, CommunicationCommentColumn, InternalAuditFunctionDiscussedColumn, DocumentationOfDiscussionColumn, ExplanationOfWhyDiscussionIsNotApplicableColumn, IsValidColumn}
		mutableColumns                                      = mysql.ColumnList{EngagementIDColumn, NameContactQualificationsExperienceColumn, NatureResponsibilitiesActivitiesColumn, FraudAffectingEntityAndViewsAboutRisksColumn, DoesInquiredWithIndividualsColumn, DetailsFromInquiriesColumn, DoYouPlanToUseTheWorkPerformedByInternalAuditColumn, ExtentThatSupportsTheObjectivityColumn, CompetenceOfTheInternalAuditFunctionColumn, IsSystematicAndDisciplinedApproachAppliedColumn, RelianceCanBePlacedOnInternalAuditColumn, RelianceCommentColumn, NatureAndScopeOfWorkPerformedColumn, EvaluationOnUsingTheWorkOfTheInternalAuditColumn, HaveYouCommunicatedOnHowTheAuditIsUsedColumn, CommunicationCommentColumn, InternalAuditFunctionDiscussedColumn, DocumentationOfDiscussionColumn, ExplanationOfWhyDiscussionIsNotApplicableColumn, IsValidColumn}
	)

	return engagementInternalAuditTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                                     IDColumn,
		EngagementID:                           EngagementIDColumn,
		NameContactQualificationsExperience:    NameContactQualificationsExperienceColumn,
		NatureResponsibilitiesActivities:       NatureResponsibilitiesActivitiesColumn,
		FraudAffectingEntityAndViewsAboutRisks: FraudAffectingEntityAndViewsAboutRisksColumn,
		DoesInquiredWithIndividuals:            DoesInquiredWithIndividualsColumn,
		DetailsFromInquiries:                   DetailsFromInquiriesColumn,
		DoYouPlanToUseTheWorkPerformedByInternalAudit: DoYouPlanToUseTheWorkPerformedByInternalAuditColumn,
		ExtentThatSupportsTheObjectivity:              ExtentThatSupportsTheObjectivityColumn,
		CompetenceOfTheInternalAuditFunction:          CompetenceOfTheInternalAuditFunctionColumn,
		IsSystematicAndDisciplinedApproachApplied:     IsSystematicAndDisciplinedApproachAppliedColumn,
		RelianceCanBePlacedOnInternalAudit:            RelianceCanBePlacedOnInternalAuditColumn,
		RelianceComment:                               RelianceCommentColumn,
		NatureAndScopeOfWorkPerformed:                 NatureAndScopeOfWorkPerformedColumn,
		EvaluationOnUsingTheWorkOfTheInternalAudit:    EvaluationOnUsingTheWorkOfTheInternalAuditColumn,
		HaveYouCommunicatedOnHowTheAuditIsUsed:        HaveYouCommunicatedOnHowTheAuditIsUsedColumn,
		CommunicationComment:                          CommunicationCommentColumn,
		InternalAuditFunctionDiscussed:                InternalAuditFunctionDiscussedColumn,
		DocumentationOfDiscussion:                     DocumentationOfDiscussionColumn,
		ExplanationOfWhyDiscussionIsNotApplicable:     ExplanationOfWhyDiscussionIsNotApplicableColumn,
		IsValid: IsValidColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
