//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MinutesOfMeetingsContactGroups = newMinutesOfMeetingsContactGroupsTable("atlas-blue", "minutes_of_meetings_contact_groups", "")

type minutesOfMeetingsContactGroupsTable struct {
	mysql.Table

	// Columns
	MinuteOfMeetingID mysql.ColumnString // (DC2Type:guid)
	ContactGroupID    mysql.ColumnString // (DC2Type:guid)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MinutesOfMeetingsContactGroupsTable struct {
	minutesOfMeetingsContactGroupsTable

	NEW minutesOfMeetingsContactGroupsTable
}

// AS creates new MinutesOfMeetingsContactGroupsTable with assigned alias
func (a MinutesOfMeetingsContactGroupsTable) AS(alias string) *MinutesOfMeetingsContactGroupsTable {
	return newMinutesOfMeetingsContactGroupsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MinutesOfMeetingsContactGroupsTable with assigned schema name
func (a MinutesOfMeetingsContactGroupsTable) FromSchema(schemaName string) *MinutesOfMeetingsContactGroupsTable {
	return newMinutesOfMeetingsContactGroupsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MinutesOfMeetingsContactGroupsTable with assigned table prefix
func (a MinutesOfMeetingsContactGroupsTable) WithPrefix(prefix string) *MinutesOfMeetingsContactGroupsTable {
	return newMinutesOfMeetingsContactGroupsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MinutesOfMeetingsContactGroupsTable with assigned table suffix
func (a MinutesOfMeetingsContactGroupsTable) WithSuffix(suffix string) *MinutesOfMeetingsContactGroupsTable {
	return newMinutesOfMeetingsContactGroupsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMinutesOfMeetingsContactGroupsTable(schemaName, tableName, alias string) *MinutesOfMeetingsContactGroupsTable {
	return &MinutesOfMeetingsContactGroupsTable{
		minutesOfMeetingsContactGroupsTable: newMinutesOfMeetingsContactGroupsTableImpl(schemaName, tableName, alias),
		NEW:                                 newMinutesOfMeetingsContactGroupsTableImpl("", "new", ""),
	}
}

func newMinutesOfMeetingsContactGroupsTableImpl(schemaName, tableName, alias string) minutesOfMeetingsContactGroupsTable {
	var (
		MinuteOfMeetingIDColumn = mysql.StringColumn("minute_of_meeting_id")
		ContactGroupIDColumn    = mysql.StringColumn("contact_group_id")
		allColumns              = mysql.ColumnList{MinuteOfMeetingIDColumn, ContactGroupIDColumn}
		mutableColumns          = mysql.ColumnList{}
	)

	return minutesOfMeetingsContactGroupsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		MinuteOfMeetingID: MinuteOfMeetingIDColumn,
		ContactGroupID:    ContactGroupIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
