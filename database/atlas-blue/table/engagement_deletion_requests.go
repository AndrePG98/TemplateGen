//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EngagementDeletionRequests = newEngagementDeletionRequestsTable("atlas-blue", "engagement_deletion_requests", "")

type engagementDeletionRequestsTable struct {
	mysql.Table

	// Columns
	ID                  mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID        mysql.ColumnString // (DC2Type:guid)
	InitiatedBy         mysql.ColumnString // (DC2Type:guid)
	ApprovedBy          mysql.ColumnString // (DC2Type:guid)
	ReasonForDeletionID mysql.ColumnInteger
	AdditionalComment   mysql.ColumnString
	InitiatedOn         mysql.ColumnDate
	ApprovedOn          mysql.ColumnDate
	ReasonForRejection  mysql.ColumnString
	State               mysql.ColumnString
	TypeOfRequest       mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EngagementDeletionRequestsTable struct {
	engagementDeletionRequestsTable

	NEW engagementDeletionRequestsTable
}

// AS creates new EngagementDeletionRequestsTable with assigned alias
func (a EngagementDeletionRequestsTable) AS(alias string) *EngagementDeletionRequestsTable {
	return newEngagementDeletionRequestsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EngagementDeletionRequestsTable with assigned schema name
func (a EngagementDeletionRequestsTable) FromSchema(schemaName string) *EngagementDeletionRequestsTable {
	return newEngagementDeletionRequestsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EngagementDeletionRequestsTable with assigned table prefix
func (a EngagementDeletionRequestsTable) WithPrefix(prefix string) *EngagementDeletionRequestsTable {
	return newEngagementDeletionRequestsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EngagementDeletionRequestsTable with assigned table suffix
func (a EngagementDeletionRequestsTable) WithSuffix(suffix string) *EngagementDeletionRequestsTable {
	return newEngagementDeletionRequestsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEngagementDeletionRequestsTable(schemaName, tableName, alias string) *EngagementDeletionRequestsTable {
	return &EngagementDeletionRequestsTable{
		engagementDeletionRequestsTable: newEngagementDeletionRequestsTableImpl(schemaName, tableName, alias),
		NEW:                             newEngagementDeletionRequestsTableImpl("", "new", ""),
	}
}

func newEngagementDeletionRequestsTableImpl(schemaName, tableName, alias string) engagementDeletionRequestsTable {
	var (
		IDColumn                  = mysql.StringColumn("id")
		EngagementIDColumn        = mysql.StringColumn("engagement_id")
		InitiatedByColumn         = mysql.StringColumn("initiated_by")
		ApprovedByColumn          = mysql.StringColumn("approved_by")
		ReasonForDeletionIDColumn = mysql.IntegerColumn("reason_for_deletion_id")
		AdditionalCommentColumn   = mysql.StringColumn("additional_comment")
		InitiatedOnColumn         = mysql.DateColumn("initiated_on")
		ApprovedOnColumn          = mysql.DateColumn("approved_on")
		ReasonForRejectionColumn  = mysql.StringColumn("reason_for_rejection")
		StateColumn               = mysql.StringColumn("state")
		TypeOfRequestColumn       = mysql.StringColumn("type_of_request")
		allColumns                = mysql.ColumnList{IDColumn, EngagementIDColumn, InitiatedByColumn, ApprovedByColumn, ReasonForDeletionIDColumn, AdditionalCommentColumn, InitiatedOnColumn, ApprovedOnColumn, ReasonForRejectionColumn, StateColumn, TypeOfRequestColumn}
		mutableColumns            = mysql.ColumnList{EngagementIDColumn, InitiatedByColumn, ApprovedByColumn, ReasonForDeletionIDColumn, AdditionalCommentColumn, InitiatedOnColumn, ApprovedOnColumn, ReasonForRejectionColumn, StateColumn, TypeOfRequestColumn}
	)

	return engagementDeletionRequestsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                  IDColumn,
		EngagementID:        EngagementIDColumn,
		InitiatedBy:         InitiatedByColumn,
		ApprovedBy:          ApprovedByColumn,
		ReasonForDeletionID: ReasonForDeletionIDColumn,
		AdditionalComment:   AdditionalCommentColumn,
		InitiatedOn:         InitiatedOnColumn,
		ApprovedOn:          ApprovedOnColumn,
		ReasonForRejection:  ReasonForRejectionColumn,
		State:               StateColumn,
		TypeOfRequest:       TypeOfRequestColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
