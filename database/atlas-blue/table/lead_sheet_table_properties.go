//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LeadSheetTableProperties = newLeadSheetTablePropertiesTable("atlas-blue", "lead_sheet_table_properties", "")

type leadSheetTablePropertiesTable struct {
	mysql.Table

	// Columns
	LeadSheetTableID mysql.ColumnString // (DC2Type:guid)
	ColumnName       mysql.ColumnString
	Order            mysql.ColumnInteger
	Width            mysql.ColumnFloat

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type LeadSheetTablePropertiesTable struct {
	leadSheetTablePropertiesTable

	NEW leadSheetTablePropertiesTable
}

// AS creates new LeadSheetTablePropertiesTable with assigned alias
func (a LeadSheetTablePropertiesTable) AS(alias string) *LeadSheetTablePropertiesTable {
	return newLeadSheetTablePropertiesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LeadSheetTablePropertiesTable with assigned schema name
func (a LeadSheetTablePropertiesTable) FromSchema(schemaName string) *LeadSheetTablePropertiesTable {
	return newLeadSheetTablePropertiesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LeadSheetTablePropertiesTable with assigned table prefix
func (a LeadSheetTablePropertiesTable) WithPrefix(prefix string) *LeadSheetTablePropertiesTable {
	return newLeadSheetTablePropertiesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LeadSheetTablePropertiesTable with assigned table suffix
func (a LeadSheetTablePropertiesTable) WithSuffix(suffix string) *LeadSheetTablePropertiesTable {
	return newLeadSheetTablePropertiesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLeadSheetTablePropertiesTable(schemaName, tableName, alias string) *LeadSheetTablePropertiesTable {
	return &LeadSheetTablePropertiesTable{
		leadSheetTablePropertiesTable: newLeadSheetTablePropertiesTableImpl(schemaName, tableName, alias),
		NEW:                           newLeadSheetTablePropertiesTableImpl("", "new", ""),
	}
}

func newLeadSheetTablePropertiesTableImpl(schemaName, tableName, alias string) leadSheetTablePropertiesTable {
	var (
		LeadSheetTableIDColumn = mysql.StringColumn("lead_sheet_table_id")
		ColumnNameColumn       = mysql.StringColumn("column_name")
		OrderColumn            = mysql.IntegerColumn("order")
		WidthColumn            = mysql.FloatColumn("width")
		allColumns             = mysql.ColumnList{LeadSheetTableIDColumn, ColumnNameColumn, OrderColumn, WidthColumn}
		mutableColumns         = mysql.ColumnList{OrderColumn, WidthColumn}
	)

	return leadSheetTablePropertiesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		LeadSheetTableID: LeadSheetTableIDColumn,
		ColumnName:       ColumnNameColumn,
		Order:            OrderColumn,
		Width:            WidthColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
