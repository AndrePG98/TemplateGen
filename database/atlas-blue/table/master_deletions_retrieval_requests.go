//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MasterDeletionsRetrievalRequests = newMasterDeletionsRetrievalRequestsTable("atlas-blue", "master_deletions_retrieval_requests", "")

type masterDeletionsRetrievalRequestsTable struct {
	mysql.Table

	// Columns
	ID                         mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EntitiesDeletionRequestID  mysql.ColumnString // (DC2Type:guid)
	RequestPartnerApprovalFrom mysql.ColumnString // (DC2Type:guid)
	UserRequestingRetrieval    mysql.ColumnString // (DC2Type:guid)
	InitiatedBy                mysql.ColumnString // (DC2Type:guid)
	ApprovedBy                 mysql.ColumnString // (DC2Type:guid)
	ReasonForRetrievalID       mysql.ColumnInteger
	AdditionnalComment         mysql.ColumnString
	InitiatedOn                mysql.ColumnDate
	ApprovedOn                 mysql.ColumnDate
	ReasonForRejection         mysql.ColumnString
	ReasonForPartnerChange     mysql.ColumnString
	RetrievalStatus            mysql.ColumnInteger
	Status                     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MasterDeletionsRetrievalRequestsTable struct {
	masterDeletionsRetrievalRequestsTable

	NEW masterDeletionsRetrievalRequestsTable
}

// AS creates new MasterDeletionsRetrievalRequestsTable with assigned alias
func (a MasterDeletionsRetrievalRequestsTable) AS(alias string) *MasterDeletionsRetrievalRequestsTable {
	return newMasterDeletionsRetrievalRequestsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MasterDeletionsRetrievalRequestsTable with assigned schema name
func (a MasterDeletionsRetrievalRequestsTable) FromSchema(schemaName string) *MasterDeletionsRetrievalRequestsTable {
	return newMasterDeletionsRetrievalRequestsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MasterDeletionsRetrievalRequestsTable with assigned table prefix
func (a MasterDeletionsRetrievalRequestsTable) WithPrefix(prefix string) *MasterDeletionsRetrievalRequestsTable {
	return newMasterDeletionsRetrievalRequestsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MasterDeletionsRetrievalRequestsTable with assigned table suffix
func (a MasterDeletionsRetrievalRequestsTable) WithSuffix(suffix string) *MasterDeletionsRetrievalRequestsTable {
	return newMasterDeletionsRetrievalRequestsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMasterDeletionsRetrievalRequestsTable(schemaName, tableName, alias string) *MasterDeletionsRetrievalRequestsTable {
	return &MasterDeletionsRetrievalRequestsTable{
		masterDeletionsRetrievalRequestsTable: newMasterDeletionsRetrievalRequestsTableImpl(schemaName, tableName, alias),
		NEW:                                   newMasterDeletionsRetrievalRequestsTableImpl("", "new", ""),
	}
}

func newMasterDeletionsRetrievalRequestsTableImpl(schemaName, tableName, alias string) masterDeletionsRetrievalRequestsTable {
	var (
		IDColumn                         = mysql.StringColumn("id")
		EntitiesDeletionRequestIDColumn  = mysql.StringColumn("entities_deletion_request_id")
		RequestPartnerApprovalFromColumn = mysql.StringColumn("request_partner_approval_from")
		UserRequestingRetrievalColumn    = mysql.StringColumn("user_requesting_retrieval")
		InitiatedByColumn                = mysql.StringColumn("initiated_by")
		ApprovedByColumn                 = mysql.StringColumn("approved_by")
		ReasonForRetrievalIDColumn       = mysql.IntegerColumn("reason_for_retrieval_id")
		AdditionnalCommentColumn         = mysql.StringColumn("additionnal_comment")
		InitiatedOnColumn                = mysql.DateColumn("initiated_on")
		ApprovedOnColumn                 = mysql.DateColumn("approved_on")
		ReasonForRejectionColumn         = mysql.StringColumn("reason_for_rejection")
		ReasonForPartnerChangeColumn     = mysql.StringColumn("reason_for_partner_change")
		RetrievalStatusColumn            = mysql.IntegerColumn("retrieval_status")
		StatusColumn                     = mysql.StringColumn("status")
		allColumns                       = mysql.ColumnList{IDColumn, EntitiesDeletionRequestIDColumn, RequestPartnerApprovalFromColumn, UserRequestingRetrievalColumn, InitiatedByColumn, ApprovedByColumn, ReasonForRetrievalIDColumn, AdditionnalCommentColumn, InitiatedOnColumn, ApprovedOnColumn, ReasonForRejectionColumn, ReasonForPartnerChangeColumn, RetrievalStatusColumn, StatusColumn}
		mutableColumns                   = mysql.ColumnList{EntitiesDeletionRequestIDColumn, RequestPartnerApprovalFromColumn, UserRequestingRetrievalColumn, InitiatedByColumn, ApprovedByColumn, ReasonForRetrievalIDColumn, AdditionnalCommentColumn, InitiatedOnColumn, ApprovedOnColumn, ReasonForRejectionColumn, ReasonForPartnerChangeColumn, RetrievalStatusColumn, StatusColumn}
	)

	return masterDeletionsRetrievalRequestsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                         IDColumn,
		EntitiesDeletionRequestID:  EntitiesDeletionRequestIDColumn,
		RequestPartnerApprovalFrom: RequestPartnerApprovalFromColumn,
		UserRequestingRetrieval:    UserRequestingRetrievalColumn,
		InitiatedBy:                InitiatedByColumn,
		ApprovedBy:                 ApprovedByColumn,
		ReasonForRetrievalID:       ReasonForRetrievalIDColumn,
		AdditionnalComment:         AdditionnalCommentColumn,
		InitiatedOn:                InitiatedOnColumn,
		ApprovedOn:                 ApprovedOnColumn,
		ReasonForRejection:         ReasonForRejectionColumn,
		ReasonForPartnerChange:     ReasonForPartnerChangeColumn,
		RetrievalStatus:            RetrievalStatusColumn,
		Status:                     StatusColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
