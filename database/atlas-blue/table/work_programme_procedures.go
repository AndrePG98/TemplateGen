//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var WorkProgrammeProcedures = newWorkProgrammeProceduresTable("atlas-blue", "work_programme_procedures", "")

type workProgrammeProceduresTable struct {
	mysql.Table

	// Columns
	ID              mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	WorkProgrammeID mysql.ColumnString // (DC2Type:guid)
	ProcedureID     mysql.ColumnString // (DC2Type:guid)
	Number          mysql.ColumnInteger
	IsDeleted       mysql.ColumnBool
	CreatedAt       mysql.ColumnDate // (DC2Type:date_immutable)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type WorkProgrammeProceduresTable struct {
	workProgrammeProceduresTable

	NEW workProgrammeProceduresTable
}

// AS creates new WorkProgrammeProceduresTable with assigned alias
func (a WorkProgrammeProceduresTable) AS(alias string) *WorkProgrammeProceduresTable {
	return newWorkProgrammeProceduresTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new WorkProgrammeProceduresTable with assigned schema name
func (a WorkProgrammeProceduresTable) FromSchema(schemaName string) *WorkProgrammeProceduresTable {
	return newWorkProgrammeProceduresTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new WorkProgrammeProceduresTable with assigned table prefix
func (a WorkProgrammeProceduresTable) WithPrefix(prefix string) *WorkProgrammeProceduresTable {
	return newWorkProgrammeProceduresTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new WorkProgrammeProceduresTable with assigned table suffix
func (a WorkProgrammeProceduresTable) WithSuffix(suffix string) *WorkProgrammeProceduresTable {
	return newWorkProgrammeProceduresTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newWorkProgrammeProceduresTable(schemaName, tableName, alias string) *WorkProgrammeProceduresTable {
	return &WorkProgrammeProceduresTable{
		workProgrammeProceduresTable: newWorkProgrammeProceduresTableImpl(schemaName, tableName, alias),
		NEW:                          newWorkProgrammeProceduresTableImpl("", "new", ""),
	}
}

func newWorkProgrammeProceduresTableImpl(schemaName, tableName, alias string) workProgrammeProceduresTable {
	var (
		IDColumn              = mysql.StringColumn("id")
		WorkProgrammeIDColumn = mysql.StringColumn("work_programme_id")
		ProcedureIDColumn     = mysql.StringColumn("procedure_id")
		NumberColumn          = mysql.IntegerColumn("number")
		IsDeletedColumn       = mysql.BoolColumn("is_deleted")
		CreatedAtColumn       = mysql.DateColumn("created_at")
		allColumns            = mysql.ColumnList{IDColumn, WorkProgrammeIDColumn, ProcedureIDColumn, NumberColumn, IsDeletedColumn, CreatedAtColumn}
		mutableColumns        = mysql.ColumnList{WorkProgrammeIDColumn, ProcedureIDColumn, NumberColumn, IsDeletedColumn, CreatedAtColumn}
	)

	return workProgrammeProceduresTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:              IDColumn,
		WorkProgrammeID: WorkProgrammeIDColumn,
		ProcedureID:     ProcedureIDColumn,
		Number:          NumberColumn,
		IsDeleted:       IsDeletedColumn,
		CreatedAt:       CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
