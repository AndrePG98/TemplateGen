//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var LeadSheetProperties = newLeadSheetPropertiesTable("atlas-blue", "lead_sheet_properties", "")

type leadSheetPropertiesTable struct {
	mysql.Table

	// Columns
	UserID           mysql.ColumnString // (DC2Type:guid)
	LeadSheetID      mysql.ColumnString // (DC2Type:guid)
	RoundingLovID    mysql.ColumnString
	AccountGrouping  mysql.ColumnString
	Areas            mysql.ColumnString // (DC2Type:array)
	ApplyToAllSheets mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type LeadSheetPropertiesTable struct {
	leadSheetPropertiesTable

	NEW leadSheetPropertiesTable
}

// AS creates new LeadSheetPropertiesTable with assigned alias
func (a LeadSheetPropertiesTable) AS(alias string) *LeadSheetPropertiesTable {
	return newLeadSheetPropertiesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new LeadSheetPropertiesTable with assigned schema name
func (a LeadSheetPropertiesTable) FromSchema(schemaName string) *LeadSheetPropertiesTable {
	return newLeadSheetPropertiesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new LeadSheetPropertiesTable with assigned table prefix
func (a LeadSheetPropertiesTable) WithPrefix(prefix string) *LeadSheetPropertiesTable {
	return newLeadSheetPropertiesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new LeadSheetPropertiesTable with assigned table suffix
func (a LeadSheetPropertiesTable) WithSuffix(suffix string) *LeadSheetPropertiesTable {
	return newLeadSheetPropertiesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newLeadSheetPropertiesTable(schemaName, tableName, alias string) *LeadSheetPropertiesTable {
	return &LeadSheetPropertiesTable{
		leadSheetPropertiesTable: newLeadSheetPropertiesTableImpl(schemaName, tableName, alias),
		NEW:                      newLeadSheetPropertiesTableImpl("", "new", ""),
	}
}

func newLeadSheetPropertiesTableImpl(schemaName, tableName, alias string) leadSheetPropertiesTable {
	var (
		UserIDColumn           = mysql.StringColumn("user_id")
		LeadSheetIDColumn      = mysql.StringColumn("lead_sheet_id")
		RoundingLovIDColumn    = mysql.StringColumn("rounding_lov_id")
		AccountGroupingColumn  = mysql.StringColumn("account_grouping")
		AreasColumn            = mysql.StringColumn("areas")
		ApplyToAllSheetsColumn = mysql.BoolColumn("apply_to_all_sheets")
		allColumns             = mysql.ColumnList{UserIDColumn, LeadSheetIDColumn, RoundingLovIDColumn, AccountGroupingColumn, AreasColumn, ApplyToAllSheetsColumn}
		mutableColumns         = mysql.ColumnList{RoundingLovIDColumn, AccountGroupingColumn, AreasColumn, ApplyToAllSheetsColumn}
	)

	return leadSheetPropertiesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserID:           UserIDColumn,
		LeadSheetID:      LeadSheetIDColumn,
		RoundingLovID:    RoundingLovIDColumn,
		AccountGrouping:  AccountGroupingColumn,
		Areas:            AreasColumn,
		ApplyToAllSheets: ApplyToAllSheetsColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
