//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var DmsCallbackCorrelation = newDmsCallbackCorrelationTable("atlas-blue", "dms_callback_correlation", "")

type dmsCallbackCorrelationTable struct {
	mysql.Table

	// Columns
	ID                 mysql.ColumnString    // @UUID("v4")(DC2Type:guid)
	CreatedAt          mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	Action             mysql.ColumnString
	Parameters         mysql.ColumnString    // (DC2Type:array)
	CallbackReceivedAt mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	IsFirstCall        mysql.ColumnBool
	Status             mysql.ColumnString
	MissingParameters  mysql.ColumnString // (DC2Type:array)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type DmsCallbackCorrelationTable struct {
	dmsCallbackCorrelationTable

	NEW dmsCallbackCorrelationTable
}

// AS creates new DmsCallbackCorrelationTable with assigned alias
func (a DmsCallbackCorrelationTable) AS(alias string) *DmsCallbackCorrelationTable {
	return newDmsCallbackCorrelationTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new DmsCallbackCorrelationTable with assigned schema name
func (a DmsCallbackCorrelationTable) FromSchema(schemaName string) *DmsCallbackCorrelationTable {
	return newDmsCallbackCorrelationTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new DmsCallbackCorrelationTable with assigned table prefix
func (a DmsCallbackCorrelationTable) WithPrefix(prefix string) *DmsCallbackCorrelationTable {
	return newDmsCallbackCorrelationTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new DmsCallbackCorrelationTable with assigned table suffix
func (a DmsCallbackCorrelationTable) WithSuffix(suffix string) *DmsCallbackCorrelationTable {
	return newDmsCallbackCorrelationTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newDmsCallbackCorrelationTable(schemaName, tableName, alias string) *DmsCallbackCorrelationTable {
	return &DmsCallbackCorrelationTable{
		dmsCallbackCorrelationTable: newDmsCallbackCorrelationTableImpl(schemaName, tableName, alias),
		NEW:                         newDmsCallbackCorrelationTableImpl("", "new", ""),
	}
}

func newDmsCallbackCorrelationTableImpl(schemaName, tableName, alias string) dmsCallbackCorrelationTable {
	var (
		IDColumn                 = mysql.StringColumn("id")
		CreatedAtColumn          = mysql.TimestampColumn("created_at")
		ActionColumn             = mysql.StringColumn("action")
		ParametersColumn         = mysql.StringColumn("parameters")
		CallbackReceivedAtColumn = mysql.TimestampColumn("callback_received_at")
		IsFirstCallColumn        = mysql.BoolColumn("is_first_call")
		StatusColumn             = mysql.StringColumn("status")
		MissingParametersColumn  = mysql.StringColumn("missing_parameters")
		allColumns               = mysql.ColumnList{IDColumn, CreatedAtColumn, ActionColumn, ParametersColumn, CallbackReceivedAtColumn, IsFirstCallColumn, StatusColumn, MissingParametersColumn}
		mutableColumns           = mysql.ColumnList{CreatedAtColumn, ActionColumn, ParametersColumn, CallbackReceivedAtColumn, IsFirstCallColumn, StatusColumn, MissingParametersColumn}
	)

	return dmsCallbackCorrelationTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		CreatedAt:          CreatedAtColumn,
		Action:             ActionColumn,
		Parameters:         ParametersColumn,
		CallbackReceivedAt: CallbackReceivedAtColumn,
		IsFirstCall:        IsFirstCallColumn,
		Status:             StatusColumn,
		MissingParameters:  MissingParametersColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
