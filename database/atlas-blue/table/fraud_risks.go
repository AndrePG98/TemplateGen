//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FraudRisks = newFraudRisksTable("atlas-blue", "fraud_risks", "")

type fraudRisksTable struct {
	mysql.Table

	// Columns
	ID           mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID mysql.ColumnString // (DC2Type:guid)
	Name         mysql.ColumnString
	RiskType     mysql.ColumnString
	IsDeleted    mysql.ColumnBool
	CreatedAt    mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FraudRisksTable struct {
	fraudRisksTable

	NEW fraudRisksTable
}

// AS creates new FraudRisksTable with assigned alias
func (a FraudRisksTable) AS(alias string) *FraudRisksTable {
	return newFraudRisksTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FraudRisksTable with assigned schema name
func (a FraudRisksTable) FromSchema(schemaName string) *FraudRisksTable {
	return newFraudRisksTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FraudRisksTable with assigned table prefix
func (a FraudRisksTable) WithPrefix(prefix string) *FraudRisksTable {
	return newFraudRisksTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FraudRisksTable with assigned table suffix
func (a FraudRisksTable) WithSuffix(suffix string) *FraudRisksTable {
	return newFraudRisksTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFraudRisksTable(schemaName, tableName, alias string) *FraudRisksTable {
	return &FraudRisksTable{
		fraudRisksTable: newFraudRisksTableImpl(schemaName, tableName, alias),
		NEW:             newFraudRisksTableImpl("", "new", ""),
	}
}

func newFraudRisksTableImpl(schemaName, tableName, alias string) fraudRisksTable {
	var (
		IDColumn           = mysql.StringColumn("id")
		EngagementIDColumn = mysql.StringColumn("engagement_id")
		NameColumn         = mysql.StringColumn("name")
		RiskTypeColumn     = mysql.StringColumn("risk_type")
		IsDeletedColumn    = mysql.BoolColumn("is_deleted")
		CreatedAtColumn    = mysql.TimestampColumn("created_at")
		allColumns         = mysql.ColumnList{IDColumn, EngagementIDColumn, NameColumn, RiskTypeColumn, IsDeletedColumn, CreatedAtColumn}
		mutableColumns     = mysql.ColumnList{EngagementIDColumn, NameColumn, RiskTypeColumn, IsDeletedColumn, CreatedAtColumn}
	)

	return fraudRisksTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:           IDColumn,
		EngagementID: EngagementIDColumn,
		Name:         NameColumn,
		RiskType:     RiskTypeColumn,
		IsDeleted:    IsDeletedColumn,
		CreatedAt:    CreatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
