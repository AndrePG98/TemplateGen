//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var TrialBalances = newTrialBalancesTable("atlas-blue", "trial_balances", "")

type trialBalancesTable struct {
	mysql.Table

	// Columns
	ID                        mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID              mysql.ColumnString // (DC2Type:guid)
	PeriodID                  mysql.ColumnString
	PhaseID                   mysql.ColumnString
	InterimPeriodID           mysql.ColumnString
	UploadDate                mysql.ColumnDate
	Start                     mysql.ColumnDate
	End                       mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	MappingStatus             mysql.ColumnString
	SubArea                   mysql.ColumnString
	Version                   mysql.ColumnInteger
	CorrelationDmsDocumentID  mysql.ColumnInteger
	CorrelationDmsFileID      mysql.ColumnInteger
	UploadedFileName          mysql.ColumnString
	IsAccountsChangedManually mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type TrialBalancesTable struct {
	trialBalancesTable

	NEW trialBalancesTable
}

// AS creates new TrialBalancesTable with assigned alias
func (a TrialBalancesTable) AS(alias string) *TrialBalancesTable {
	return newTrialBalancesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TrialBalancesTable with assigned schema name
func (a TrialBalancesTable) FromSchema(schemaName string) *TrialBalancesTable {
	return newTrialBalancesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TrialBalancesTable with assigned table prefix
func (a TrialBalancesTable) WithPrefix(prefix string) *TrialBalancesTable {
	return newTrialBalancesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TrialBalancesTable with assigned table suffix
func (a TrialBalancesTable) WithSuffix(suffix string) *TrialBalancesTable {
	return newTrialBalancesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTrialBalancesTable(schemaName, tableName, alias string) *TrialBalancesTable {
	return &TrialBalancesTable{
		trialBalancesTable: newTrialBalancesTableImpl(schemaName, tableName, alias),
		NEW:                newTrialBalancesTableImpl("", "new", ""),
	}
}

func newTrialBalancesTableImpl(schemaName, tableName, alias string) trialBalancesTable {
	var (
		IDColumn                        = mysql.StringColumn("id")
		EngagementIDColumn              = mysql.StringColumn("engagement_id")
		PeriodIDColumn                  = mysql.StringColumn("period_id")
		PhaseIDColumn                   = mysql.StringColumn("phase_id")
		InterimPeriodIDColumn           = mysql.StringColumn("interim_period_id")
		UploadDateColumn                = mysql.DateColumn("upload_date")
		StartColumn                     = mysql.DateColumn("start")
		EndColumn                       = mysql.TimestampColumn("end")
		MappingStatusColumn             = mysql.StringColumn("mapping_status")
		SubAreaColumn                   = mysql.StringColumn("sub_area")
		VersionColumn                   = mysql.IntegerColumn("version")
		CorrelationDmsDocumentIDColumn  = mysql.IntegerColumn("correlation_dms_document_id")
		CorrelationDmsFileIDColumn      = mysql.IntegerColumn("correlation_dms_file_id")
		UploadedFileNameColumn          = mysql.StringColumn("uploaded_file_name")
		IsAccountsChangedManuallyColumn = mysql.BoolColumn("is_accounts_changed_manually")
		allColumns                      = mysql.ColumnList{IDColumn, EngagementIDColumn, PeriodIDColumn, PhaseIDColumn, InterimPeriodIDColumn, UploadDateColumn, StartColumn, EndColumn, MappingStatusColumn, SubAreaColumn, VersionColumn, CorrelationDmsDocumentIDColumn, CorrelationDmsFileIDColumn, UploadedFileNameColumn, IsAccountsChangedManuallyColumn}
		mutableColumns                  = mysql.ColumnList{EngagementIDColumn, PeriodIDColumn, PhaseIDColumn, InterimPeriodIDColumn, UploadDateColumn, StartColumn, EndColumn, MappingStatusColumn, SubAreaColumn, VersionColumn, CorrelationDmsDocumentIDColumn, CorrelationDmsFileIDColumn, UploadedFileNameColumn, IsAccountsChangedManuallyColumn}
	)

	return trialBalancesTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                        IDColumn,
		EngagementID:              EngagementIDColumn,
		PeriodID:                  PeriodIDColumn,
		PhaseID:                   PhaseIDColumn,
		InterimPeriodID:           InterimPeriodIDColumn,
		UploadDate:                UploadDateColumn,
		Start:                     StartColumn,
		End:                       EndColumn,
		MappingStatus:             MappingStatusColumn,
		SubArea:                   SubAreaColumn,
		Version:                   VersionColumn,
		CorrelationDmsDocumentID:  CorrelationDmsDocumentIDColumn,
		CorrelationDmsFileID:      CorrelationDmsFileIDColumn,
		UploadedFileName:          UploadedFileNameColumn,
		IsAccountsChangedManually: IsAccountsChangedManuallyColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
