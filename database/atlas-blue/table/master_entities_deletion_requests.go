//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var MasterEntitiesDeletionRequests = newMasterEntitiesDeletionRequestsTable("atlas-blue", "master_entities_deletion_requests", "")

type masterEntitiesDeletionRequestsTable struct {
	mysql.Table

	// Columns
	ID                         mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EntityID                   mysql.ColumnString // (DC2Type:guid)
	InitiatedBy                mysql.ColumnString // (DC2Type:guid)
	ApprovedBy                 mysql.ColumnString // (DC2Type:guid)
	ReasonForDeletionID        mysql.ColumnInteger
	AdditionnalComment         mysql.ColumnString
	InitiatedOn                mysql.ColumnDate
	DeletionStatusID           mysql.ColumnInteger
	ApprovedOn                 mysql.ColumnDate
	ReasonForRejection         mysql.ColumnString
	DeletionRetrievalRequestID mysql.ColumnString
	Status                     mysql.ColumnString

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type MasterEntitiesDeletionRequestsTable struct {
	masterEntitiesDeletionRequestsTable

	NEW masterEntitiesDeletionRequestsTable
}

// AS creates new MasterEntitiesDeletionRequestsTable with assigned alias
func (a MasterEntitiesDeletionRequestsTable) AS(alias string) *MasterEntitiesDeletionRequestsTable {
	return newMasterEntitiesDeletionRequestsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new MasterEntitiesDeletionRequestsTable with assigned schema name
func (a MasterEntitiesDeletionRequestsTable) FromSchema(schemaName string) *MasterEntitiesDeletionRequestsTable {
	return newMasterEntitiesDeletionRequestsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new MasterEntitiesDeletionRequestsTable with assigned table prefix
func (a MasterEntitiesDeletionRequestsTable) WithPrefix(prefix string) *MasterEntitiesDeletionRequestsTable {
	return newMasterEntitiesDeletionRequestsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new MasterEntitiesDeletionRequestsTable with assigned table suffix
func (a MasterEntitiesDeletionRequestsTable) WithSuffix(suffix string) *MasterEntitiesDeletionRequestsTable {
	return newMasterEntitiesDeletionRequestsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newMasterEntitiesDeletionRequestsTable(schemaName, tableName, alias string) *MasterEntitiesDeletionRequestsTable {
	return &MasterEntitiesDeletionRequestsTable{
		masterEntitiesDeletionRequestsTable: newMasterEntitiesDeletionRequestsTableImpl(schemaName, tableName, alias),
		NEW:                                 newMasterEntitiesDeletionRequestsTableImpl("", "new", ""),
	}
}

func newMasterEntitiesDeletionRequestsTableImpl(schemaName, tableName, alias string) masterEntitiesDeletionRequestsTable {
	var (
		IDColumn                         = mysql.StringColumn("id")
		EntityIDColumn                   = mysql.StringColumn("entity_id")
		InitiatedByColumn                = mysql.StringColumn("initiated_by")
		ApprovedByColumn                 = mysql.StringColumn("approved_by")
		ReasonForDeletionIDColumn        = mysql.IntegerColumn("reason_for_deletion_id")
		AdditionnalCommentColumn         = mysql.StringColumn("additionnal_comment")
		InitiatedOnColumn                = mysql.DateColumn("initiated_on")
		DeletionStatusIDColumn           = mysql.IntegerColumn("deletion_status_id")
		ApprovedOnColumn                 = mysql.DateColumn("approved_on")
		ReasonForRejectionColumn         = mysql.StringColumn("reason_for_rejection")
		DeletionRetrievalRequestIDColumn = mysql.StringColumn("deletion_retrieval_request_id")
		StatusColumn                     = mysql.StringColumn("status")
		allColumns                       = mysql.ColumnList{IDColumn, EntityIDColumn, InitiatedByColumn, ApprovedByColumn, ReasonForDeletionIDColumn, AdditionnalCommentColumn, InitiatedOnColumn, DeletionStatusIDColumn, ApprovedOnColumn, ReasonForRejectionColumn, DeletionRetrievalRequestIDColumn, StatusColumn}
		mutableColumns                   = mysql.ColumnList{EntityIDColumn, InitiatedByColumn, ApprovedByColumn, ReasonForDeletionIDColumn, AdditionnalCommentColumn, InitiatedOnColumn, DeletionStatusIDColumn, ApprovedOnColumn, ReasonForRejectionColumn, DeletionRetrievalRequestIDColumn, StatusColumn}
	)

	return masterEntitiesDeletionRequestsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                         IDColumn,
		EntityID:                   EntityIDColumn,
		InitiatedBy:                InitiatedByColumn,
		ApprovedBy:                 ApprovedByColumn,
		ReasonForDeletionID:        ReasonForDeletionIDColumn,
		AdditionnalComment:         AdditionnalCommentColumn,
		InitiatedOn:                InitiatedOnColumn,
		DeletionStatusID:           DeletionStatusIDColumn,
		ApprovedOn:                 ApprovedOnColumn,
		ReasonForRejection:         ReasonForRejectionColumn,
		DeletionRetrievalRequestID: DeletionRetrievalRequestIDColumn,
		Status:                     StatusColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
