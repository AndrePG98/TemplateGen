//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var ExportReviewsHistory = newExportReviewsHistoryTable("atlas-blue", "export_reviews_history", "")

type exportReviewsHistoryTable struct {
	mysql.Table

	// Columns
	ID                              mysql.ColumnInteger
	DocumentID                      mysql.ColumnInteger
	DocumentVersion                 mysql.ColumnInteger
	UserID                          mysql.ColumnString
	ReviewedBy                      mysql.ColumnString
	ReviewStatusNumber              mysql.ColumnBool
	ReviewedAt                      mysql.ColumnString
	DocreviewOnChangeEntertimestamp mysql.ColumnString
	UserEntertimestamp              mysql.ColumnString
	EngagementID                    mysql.ColumnInteger
	AtlasEngagementID               mysql.ColumnString
	DocumentAttachedAt              mysql.ColumnString
	Imported                        mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type ExportReviewsHistoryTable struct {
	exportReviewsHistoryTable

	NEW exportReviewsHistoryTable
}

// AS creates new ExportReviewsHistoryTable with assigned alias
func (a ExportReviewsHistoryTable) AS(alias string) *ExportReviewsHistoryTable {
	return newExportReviewsHistoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new ExportReviewsHistoryTable with assigned schema name
func (a ExportReviewsHistoryTable) FromSchema(schemaName string) *ExportReviewsHistoryTable {
	return newExportReviewsHistoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new ExportReviewsHistoryTable with assigned table prefix
func (a ExportReviewsHistoryTable) WithPrefix(prefix string) *ExportReviewsHistoryTable {
	return newExportReviewsHistoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new ExportReviewsHistoryTable with assigned table suffix
func (a ExportReviewsHistoryTable) WithSuffix(suffix string) *ExportReviewsHistoryTable {
	return newExportReviewsHistoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newExportReviewsHistoryTable(schemaName, tableName, alias string) *ExportReviewsHistoryTable {
	return &ExportReviewsHistoryTable{
		exportReviewsHistoryTable: newExportReviewsHistoryTableImpl(schemaName, tableName, alias),
		NEW:                       newExportReviewsHistoryTableImpl("", "new", ""),
	}
}

func newExportReviewsHistoryTableImpl(schemaName, tableName, alias string) exportReviewsHistoryTable {
	var (
		IDColumn                              = mysql.IntegerColumn("id")
		DocumentIDColumn                      = mysql.IntegerColumn("document_id")
		DocumentVersionColumn                 = mysql.IntegerColumn("document_version")
		UserIDColumn                          = mysql.StringColumn("user_id")
		ReviewedByColumn                      = mysql.StringColumn("reviewed_by")
		ReviewStatusNumberColumn              = mysql.BoolColumn("review_status_number")
		ReviewedAtColumn                      = mysql.StringColumn("reviewed_at")
		DocreviewOnChangeEntertimestampColumn = mysql.StringColumn("docreview_on_change_entertimestamp")
		UserEntertimestampColumn              = mysql.StringColumn("user_entertimestamp")
		EngagementIDColumn                    = mysql.IntegerColumn("engagement_id")
		AtlasEngagementIDColumn               = mysql.StringColumn("atlas_engagement_id")
		DocumentAttachedAtColumn              = mysql.StringColumn("document_attached_at")
		ImportedColumn                        = mysql.BoolColumn("imported")
		allColumns                            = mysql.ColumnList{IDColumn, DocumentIDColumn, DocumentVersionColumn, UserIDColumn, ReviewedByColumn, ReviewStatusNumberColumn, ReviewedAtColumn, DocreviewOnChangeEntertimestampColumn, UserEntertimestampColumn, EngagementIDColumn, AtlasEngagementIDColumn, DocumentAttachedAtColumn, ImportedColumn}
		mutableColumns                        = mysql.ColumnList{DocumentIDColumn, DocumentVersionColumn, UserIDColumn, ReviewedByColumn, ReviewStatusNumberColumn, ReviewedAtColumn, DocreviewOnChangeEntertimestampColumn, UserEntertimestampColumn, EngagementIDColumn, AtlasEngagementIDColumn, DocumentAttachedAtColumn, ImportedColumn}
	)

	return exportReviewsHistoryTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                              IDColumn,
		DocumentID:                      DocumentIDColumn,
		DocumentVersion:                 DocumentVersionColumn,
		UserID:                          UserIDColumn,
		ReviewedBy:                      ReviewedByColumn,
		ReviewStatusNumber:              ReviewStatusNumberColumn,
		ReviewedAt:                      ReviewedAtColumn,
		DocreviewOnChangeEntertimestamp: DocreviewOnChangeEntertimestampColumn,
		UserEntertimestamp:              UserEntertimestampColumn,
		EngagementID:                    EngagementIDColumn,
		AtlasEngagementID:               AtlasEngagementIDColumn,
		DocumentAttachedAt:              DocumentAttachedAtColumn,
		Imported:                        ImportedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
