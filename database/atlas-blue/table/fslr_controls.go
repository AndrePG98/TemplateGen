//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var FslrControls = newFslrControlsTable("atlas-blue", "fslr_controls", "")

type fslrControlsTable struct {
	mysql.Table

	// Columns
	ID                  mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID        mysql.ColumnString // (DC2Type:guid)
	FslrAreaID          mysql.ColumnString
	OtherFslrID         mysql.ColumnString
	Name                mysql.ColumnString
	SourceID            mysql.ColumnString
	ControlType         mysql.ColumnString
	ControlFrequency    mysql.ColumnString
	PreventOrDetect     mysql.ColumnString
	ControlLevel        mysql.ColumnString
	PlannedEvaluationDi mysql.ColumnBool
	PlannedEvaluationOe mysql.ColumnBool
	ItApplicationID     mysql.ColumnString
	CreatedAt           mysql.ColumnTimestamp
	IsDeleted           mysql.ColumnBool

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type FslrControlsTable struct {
	fslrControlsTable

	NEW fslrControlsTable
}

// AS creates new FslrControlsTable with assigned alias
func (a FslrControlsTable) AS(alias string) *FslrControlsTable {
	return newFslrControlsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FslrControlsTable with assigned schema name
func (a FslrControlsTable) FromSchema(schemaName string) *FslrControlsTable {
	return newFslrControlsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FslrControlsTable with assigned table prefix
func (a FslrControlsTable) WithPrefix(prefix string) *FslrControlsTable {
	return newFslrControlsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FslrControlsTable with assigned table suffix
func (a FslrControlsTable) WithSuffix(suffix string) *FslrControlsTable {
	return newFslrControlsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFslrControlsTable(schemaName, tableName, alias string) *FslrControlsTable {
	return &FslrControlsTable{
		fslrControlsTable: newFslrControlsTableImpl(schemaName, tableName, alias),
		NEW:               newFslrControlsTableImpl("", "new", ""),
	}
}

func newFslrControlsTableImpl(schemaName, tableName, alias string) fslrControlsTable {
	var (
		IDColumn                  = mysql.StringColumn("id")
		EngagementIDColumn        = mysql.StringColumn("engagement_id")
		FslrAreaIDColumn          = mysql.StringColumn("fslr_area_id")
		OtherFslrIDColumn         = mysql.StringColumn("other_fslr_id")
		NameColumn                = mysql.StringColumn("name")
		SourceIDColumn            = mysql.StringColumn("source_id")
		ControlTypeColumn         = mysql.StringColumn("control_type")
		ControlFrequencyColumn    = mysql.StringColumn("control_frequency")
		PreventOrDetectColumn     = mysql.StringColumn("prevent_or_detect")
		ControlLevelColumn        = mysql.StringColumn("control_level")
		PlannedEvaluationDiColumn = mysql.BoolColumn("planned_evaluation_di")
		PlannedEvaluationOeColumn = mysql.BoolColumn("planned_evaluation_oe")
		ItApplicationIDColumn     = mysql.StringColumn("it_application_id")
		CreatedAtColumn           = mysql.TimestampColumn("created_at")
		IsDeletedColumn           = mysql.BoolColumn("is_deleted")
		allColumns                = mysql.ColumnList{IDColumn, EngagementIDColumn, FslrAreaIDColumn, OtherFslrIDColumn, NameColumn, SourceIDColumn, ControlTypeColumn, ControlFrequencyColumn, PreventOrDetectColumn, ControlLevelColumn, PlannedEvaluationDiColumn, PlannedEvaluationOeColumn, ItApplicationIDColumn, CreatedAtColumn, IsDeletedColumn}
		mutableColumns            = mysql.ColumnList{EngagementIDColumn, FslrAreaIDColumn, OtherFslrIDColumn, NameColumn, SourceIDColumn, ControlTypeColumn, ControlFrequencyColumn, PreventOrDetectColumn, ControlLevelColumn, PlannedEvaluationDiColumn, PlannedEvaluationOeColumn, ItApplicationIDColumn, CreatedAtColumn, IsDeletedColumn}
	)

	return fslrControlsTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                  IDColumn,
		EngagementID:        EngagementIDColumn,
		FslrAreaID:          FslrAreaIDColumn,
		OtherFslrID:         OtherFslrIDColumn,
		Name:                NameColumn,
		SourceID:            SourceIDColumn,
		ControlType:         ControlTypeColumn,
		ControlFrequency:    ControlFrequencyColumn,
		PreventOrDetect:     PreventOrDetectColumn,
		ControlLevel:        ControlLevelColumn,
		PlannedEvaluationDi: PlannedEvaluationDiColumn,
		PlannedEvaluationOe: PlannedEvaluationOeColumn,
		ItApplicationID:     ItApplicationIDColumn,
		CreatedAt:           CreatedAtColumn,
		IsDeleted:           IsDeletedColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
