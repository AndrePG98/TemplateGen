//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var EngagementUpversionStatus = newEngagementUpversionStatusTable("atlas-blue", "engagement_upversion_status", "")

type engagementUpversionStatusTable struct {
	mysql.Table

	// Columns
	ID                     mysql.ColumnInteger
	EngagementID           mysql.ColumnString // (DC2Type:guid)
	UpversionedOrRefusedBy mysql.ColumnString // (DC2Type:guid)
	PreviousLocalPackage   mysql.ColumnString
	UpversionLocalPackage  mysql.ColumnString
	UpversionDate          mysql.ColumnTimestamp // (DC2Type:datetime_immutable)
	UpversionStatus        mysql.ColumnString
	Comment                mysql.ColumnString
	Changes                mysql.ColumnString // (DC2Type:json)

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type EngagementUpversionStatusTable struct {
	engagementUpversionStatusTable

	NEW engagementUpversionStatusTable
}

// AS creates new EngagementUpversionStatusTable with assigned alias
func (a EngagementUpversionStatusTable) AS(alias string) *EngagementUpversionStatusTable {
	return newEngagementUpversionStatusTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new EngagementUpversionStatusTable with assigned schema name
func (a EngagementUpversionStatusTable) FromSchema(schemaName string) *EngagementUpversionStatusTable {
	return newEngagementUpversionStatusTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new EngagementUpversionStatusTable with assigned table prefix
func (a EngagementUpversionStatusTable) WithPrefix(prefix string) *EngagementUpversionStatusTable {
	return newEngagementUpversionStatusTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new EngagementUpversionStatusTable with assigned table suffix
func (a EngagementUpversionStatusTable) WithSuffix(suffix string) *EngagementUpversionStatusTable {
	return newEngagementUpversionStatusTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newEngagementUpversionStatusTable(schemaName, tableName, alias string) *EngagementUpversionStatusTable {
	return &EngagementUpversionStatusTable{
		engagementUpversionStatusTable: newEngagementUpversionStatusTableImpl(schemaName, tableName, alias),
		NEW:                            newEngagementUpversionStatusTableImpl("", "new", ""),
	}
}

func newEngagementUpversionStatusTableImpl(schemaName, tableName, alias string) engagementUpversionStatusTable {
	var (
		IDColumn                     = mysql.IntegerColumn("id")
		EngagementIDColumn           = mysql.StringColumn("engagement_id")
		UpversionedOrRefusedByColumn = mysql.StringColumn("upversioned_or_refused_by")
		PreviousLocalPackageColumn   = mysql.StringColumn("previous_local_package")
		UpversionLocalPackageColumn  = mysql.StringColumn("upversion_local_package")
		UpversionDateColumn          = mysql.TimestampColumn("upversion_date")
		UpversionStatusColumn        = mysql.StringColumn("upversion_status")
		CommentColumn                = mysql.StringColumn("comment")
		ChangesColumn                = mysql.StringColumn("changes")
		allColumns                   = mysql.ColumnList{IDColumn, EngagementIDColumn, UpversionedOrRefusedByColumn, PreviousLocalPackageColumn, UpversionLocalPackageColumn, UpversionDateColumn, UpversionStatusColumn, CommentColumn, ChangesColumn}
		mutableColumns               = mysql.ColumnList{EngagementIDColumn, UpversionedOrRefusedByColumn, PreviousLocalPackageColumn, UpversionLocalPackageColumn, UpversionDateColumn, UpversionStatusColumn, CommentColumn, ChangesColumn}
	)

	return engagementUpversionStatusTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                     IDColumn,
		EngagementID:           EngagementIDColumn,
		UpversionedOrRefusedBy: UpversionedOrRefusedByColumn,
		PreviousLocalPackage:   PreviousLocalPackageColumn,
		UpversionLocalPackage:  UpversionLocalPackageColumn,
		UpversionDate:          UpversionDateColumn,
		UpversionStatus:        UpversionStatusColumn,
		Comment:                CommentColumn,
		Changes:                ChangesColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
