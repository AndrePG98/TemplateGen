//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/mysql"
)

var CompletionEqrSignOffHistory = newCompletionEqrSignOffHistoryTable("atlas-blue", "completion_eqr_sign_off_history", "")

type completionEqrSignOffHistoryTable struct {
	mysql.Table

	// Columns
	ID                     mysql.ColumnString // @UUID("v4")(DC2Type:guid)
	EngagementID           mysql.ColumnString // (DC2Type:guid)
	UserID                 mysql.ColumnString // (DC2Type:guid)
	CompletionEqrSignOffID mysql.ColumnString // (DC2Type:guid)
	FieldName              mysql.ColumnString
	FieldValue             mysql.ColumnBool
	Comment                mysql.ColumnString
	Date                   mysql.ColumnTimestamp

	AllColumns     mysql.ColumnList
	MutableColumns mysql.ColumnList
}

type CompletionEqrSignOffHistoryTable struct {
	completionEqrSignOffHistoryTable

	NEW completionEqrSignOffHistoryTable
}

// AS creates new CompletionEqrSignOffHistoryTable with assigned alias
func (a CompletionEqrSignOffHistoryTable) AS(alias string) *CompletionEqrSignOffHistoryTable {
	return newCompletionEqrSignOffHistoryTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new CompletionEqrSignOffHistoryTable with assigned schema name
func (a CompletionEqrSignOffHistoryTable) FromSchema(schemaName string) *CompletionEqrSignOffHistoryTable {
	return newCompletionEqrSignOffHistoryTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new CompletionEqrSignOffHistoryTable with assigned table prefix
func (a CompletionEqrSignOffHistoryTable) WithPrefix(prefix string) *CompletionEqrSignOffHistoryTable {
	return newCompletionEqrSignOffHistoryTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new CompletionEqrSignOffHistoryTable with assigned table suffix
func (a CompletionEqrSignOffHistoryTable) WithSuffix(suffix string) *CompletionEqrSignOffHistoryTable {
	return newCompletionEqrSignOffHistoryTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newCompletionEqrSignOffHistoryTable(schemaName, tableName, alias string) *CompletionEqrSignOffHistoryTable {
	return &CompletionEqrSignOffHistoryTable{
		completionEqrSignOffHistoryTable: newCompletionEqrSignOffHistoryTableImpl(schemaName, tableName, alias),
		NEW:                              newCompletionEqrSignOffHistoryTableImpl("", "new", ""),
	}
}

func newCompletionEqrSignOffHistoryTableImpl(schemaName, tableName, alias string) completionEqrSignOffHistoryTable {
	var (
		IDColumn                     = mysql.StringColumn("id")
		EngagementIDColumn           = mysql.StringColumn("engagement_id")
		UserIDColumn                 = mysql.StringColumn("user_id")
		CompletionEqrSignOffIDColumn = mysql.StringColumn("completion_eqr_sign_off_id")
		FieldNameColumn              = mysql.StringColumn("field_name")
		FieldValueColumn             = mysql.BoolColumn("field_value")
		CommentColumn                = mysql.StringColumn("comment")
		DateColumn                   = mysql.TimestampColumn("date")
		allColumns                   = mysql.ColumnList{IDColumn, EngagementIDColumn, UserIDColumn, CompletionEqrSignOffIDColumn, FieldNameColumn, FieldValueColumn, CommentColumn, DateColumn}
		mutableColumns               = mysql.ColumnList{EngagementIDColumn, UserIDColumn, CompletionEqrSignOffIDColumn, FieldNameColumn, FieldValueColumn, CommentColumn, DateColumn}
	)

	return completionEqrSignOffHistoryTable{
		Table: mysql.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                     IDColumn,
		EngagementID:           EngagementIDColumn,
		UserID:                 UserIDColumn,
		CompletionEqrSignOffID: CompletionEqrSignOffIDColumn,
		FieldName:              FieldNameColumn,
		FieldValue:             FieldValueColumn,
		Comment:                CommentColumn,
		Date:                   DateColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
